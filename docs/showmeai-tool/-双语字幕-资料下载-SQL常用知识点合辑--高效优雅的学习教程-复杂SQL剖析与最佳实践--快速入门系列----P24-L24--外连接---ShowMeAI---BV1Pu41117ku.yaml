- en: 【双语字幕+资料下载】SQL常用知识点合辑——高效优雅的学习教程，复杂SQL剖析与最佳实践！＜快速入门系列＞ - P24：L24- 外连接 - ShowMeAI
    - BV1Pu41117ku
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/f8df46f601a08cab13c11a5e4f1fe4d4_0.png)'
  prefs: []
  type: TYPE_IMG
- en: 哦。Earlier in this section I told you that in SQL we have two types of joins。
    inner joins and outer joins now so far you have only seen examples of inner joins
    and I also told you that this inner keyword is optional so whenever you type out
    a join you're using an inner join in this tutorial we're going to look at outer
    joins and the problems they solve。
  prefs: []
  type: TYPE_NORMAL
- en: 😊，So let's start by writing a query that uses an inner join。 and then we'll
    convert that inner join to an aler join。 So select。😊。Everything from the customer's
    table。Join it with the orders table。On C that customer ID should be equal to O
    that customer ID。Pretty basic， right？😊，Now， for clarity。
  prefs: []
  type: TYPE_NORMAL
- en: let's pick a few columns from these two tables。 So from the customer's table。
    I want to pick customer I D。And first name。And from the order table， I want to
    pick order ID。😊。Now finally， let's sort the result so we can clearly see what
    we get so order by C customer ID。😊。Let's execute this query and see what we get。So
    here's the result。
  prefs: []
  type: TYPE_NORMAL
- en: For customer number two called InNs or Inus， whatever， we have two orders， order
    4 and order 7。Similarly for customer number five， we have two orders and so on。Now
    there is something missing in this result。 We only see customers who have an order
    in our system。 These are customers 2，5，6，7，8 and 10。 but if you look at the customers
    table。
  prefs: []
  type: TYPE_NORMAL
- en: you can see that we have other customers like customer number one， customer
    number3 and so on。Now currently we don't have any orders for these customers。
    and that's the reason we don't see them in this result set。 But what if you want
    to see all the customers， whether they have an order or not。
  prefs: []
  type: TYPE_NORMAL
- en: that's when we use an al join， let me show you how that works。 So back to our
    query。😊。The reason we only saw customers who have an order was because of this
    join condition when joining these two tables。 we are only returning records that
    match this condition。So for a given customer。 if we do have an order。😊，That record
    is returned。 But as you saw a second ago。
  prefs: []
  type: TYPE_NORMAL
- en: some of our customers don't have an order。 So for those customers， this condition
    is not valid。 and that is the reason they' are not returned in the result set
    to solve this problem。 We use an outer join。 Now in SQL， we have two types of
    outer joints。 We have left joints and right joints。When we use a left join。
  prefs: []
  type: TYPE_NORMAL
- en: all the records from the left table in this case， customers are returned whether
    this condition is true or not。 so we get all the customers and if they do have
    an order， we'll see the order I as well。 Let's execute this query and see what
    we get。😊，So。There you go。 customer number one doesn't have an order， and that's
    why we get null in this cell。😊。
  prefs: []
  type: TYPE_NORMAL
- en: Customer number two has two orders，4 and 7。 customer number 3 also doesn't have
    an order。 so we have null for order I。This is the result of a left joint。So back
    to our query。 when we use a left join， all the records from the left table are
    returned。 whether this condition is true or not。Now， what if we use a right join？😡，In
    this case。
  prefs: []
  type: TYPE_NORMAL
- en: all the records from the orders table are returned， whether this condition is
    true or not。 let's execute this query and see what we get。So。We get the same result
    as before when we use an inner join because we are selecting all the records from
    the right table。
  prefs: []
  type: TYPE_NORMAL
- en: which is the orders table so we don't see all the customers。 we see all the
    orders right now if you want to use a right join and still see all the customers。
    you need to swap the order of these tables so。😊，We put the orders table first。
    That's going to be our left table， and then we put the customers on the right
    side。
  prefs: []
  type: TYPE_NORMAL
- en: So now with this query， we'll return all the records from the right table。 which
    is the customers table。Let we execute this， we got。All the customers。 whether
    they have an order or not， beautiful。Now， one last thing before we finish this
    tutorial。 I've seen developers use the outer keyword here， so either right outer
    join or left outer join。
  prefs: []
  type: TYPE_NORMAL
- en: but technically the outer keyword is optional just like the inner keyword。 so
    you don't have to type it out。😊，So I'm going to remove this to make my code shorter
    and easier to understand。 so to recap， if you use the join keyword， you're doing
    an inner join and if you do a left or right join。 you're doing an outer join。😊，Here's
    our exercise for this tutorial。
  prefs: []
  type: TYPE_NORMAL
- en: I want you to write a query that produces this result。 So we have three columns
    here。 product I name and quantity that I picked from the order items table。 So
    here we need to join the product table with order items table。 so we can see how
    many times each product is ordered。 However。
  prefs: []
  type: TYPE_NORMAL
- en: if we do an inner join we'll only see the products that have been ordered。 But
    here I'm doing an outer join so。😊，Product number7 has never been ordered。 but
    it still exists in the result we sit now for the quantity。So go ahead and write
    an outer join to produce this result。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f8df46f601a08cab13c11a5e4f1fe4d4_2.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/f8df46f601a08cab13c11a5e4f1fe4d4_3.png)'
  prefs: []
  type: TYPE_IMG
- en: All right， first we select everything from the product table。😊。And then to a
    left join with the order items table。Our joint condition is P that product ID
    equals Oi that product ID。So because we're using a left join， we'll get all the
    products in the product table。
  prefs: []
  type: TYPE_NORMAL
- en: whether this condition is true or not。😊，If they have never been ordered。 we'll
    still see them in the result。Now let's pick a few columns for clarity， so P。 product
    ID。P dot name and Oi dot quantity。That's it。 Let's execute the query。 We get the
    same result as before。 so all the products are here and product number7 has never
    been ordered。
  prefs: []
  type: TYPE_NORMAL
- en: so we see null for the quantity。😊。![](img/f8df46f601a08cab13c11a5e4f1fe4d4_5.png)
  prefs: []
  type: TYPE_NORMAL
- en: Yeah。![](img/f8df46f601a08cab13c11a5e4f1fe4d4_7.png)
  prefs: []
  type: TYPE_NORMAL
