- en: 【双语字幕+资料下载】用 Pandas 进行数据处理与分析！真实数据&实时讲解，学完就能上手做数据分析了！＜实战教程系列＞ - P1：1）数据分析入门
    - 安装和加载数据 - ShowMeAI - BV1M64y187bz
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hey there。 how's it going， everybody。 In this series of videos。 we're gonna
    be learning how to use the pandas library and Python。 So pandas is a data analysis
    library that allows us to easily read in and work with different types of data。
    So we can use this to analyze Cv files， Excel files and other similar formats。
  prefs: []
  type: TYPE_NORMAL
- en: So if you're getting into the data science field。 then this library is going
    to be essential to learn。 It's one of the most downloaded packages for Python。
    And that's for a great reason。 So not only does it allow us to easily read in
    and analyze data。 but it also has great performance since it's built on top of
    nupyy。
  prefs: []
  type: TYPE_NORMAL
- en: And we'll be learning how to do different types of an analysis of data analysis
    in this series。 So in this video， we're going to be going over how to get pandas
    installed。 how to download the data that I'll be using for most of this series。
    And also how to get all of this open in a Jupipyter notebook。
  prefs: []
  type: TYPE_NORMAL
- en: So that we're ready to do some coding and analysis。 Now。 I'd also like to mention
    that we do have a sponsor for this series of videos。 And that is brilliant org。
    So I really want to thank brilliant for sponsoring this series。😊。And it would
    be great if you all could check them out using the link in the description section
    below and support the sponsors。
  prefs: []
  type: TYPE_NORMAL
- en: and I'll talk more about their services in just a bit。 So with that said。 let's
    go ahead and get started。 So first of all， let's install pandas。 So I'm using
    a clean virtual environment for this series。 but you don't have to use a virtual
    environment if you don't want to if you don't know what a virtual environment
    is and would like to learn more about those。
  prefs: []
  type: TYPE_NORMAL
- en: then I'll be sure to leave a link to my video on that topic and the description
    section below if anyone is interested。 So it's really easy to install pandas here。
    All we need to do is say Pip install。😊，Paandice。 and we will let this run through。And
    once we have pandas installed。 then let's also install Jupiter so that we can
    use Jupiter notebooks。Now。
  prefs: []
  type: TYPE_NORMAL
- en: I was a bit hesitant to use Jupiter for this series because some people find
    it difficult to get the hang of。 But honestly， if you're going to be doing a lot
    of work with pandas。 then it's definitely a nice tool to use for this。 So now
    it's not necessary。 So you should be able to follow along with this series just
    fine。 if you're using a regular editor。
  prefs: []
  type: TYPE_NORMAL
- en: but Jupiter notebooks allows us to actually see our data more easily by using
    the browser to print out our data and tables that make it easier to visualize。
    So I'm going to use it in the series， but you don't have to in order to follow
    along。 So to install Jupiter。 I'm going to say Pip install。 And this is going
    to be Jupiter lab。 and this is spelled J U P Y T E， R L A B Jupiter lab。 So we'll
    get that installed。
  prefs: []
  type: TYPE_NORMAL
- en: Now I'm not going to go into a deep dive and how to use Jupiter in this series。
    I'm mainly going to focus on pandas。 But if you'd like a detailed overview of
    how to use Jupiter。 then I do have a video on how to。![](img/5add6d4de51b5a268a6c0097836349e4_1.png)
  prefs: []
  type: TYPE_NORMAL
- en: Jupiter in depth and I'll leave a link to that video in the description section
    below if anyone would like to learn more about the details of using that。 Okay
    so now we have pandas and Jupyter notebooks installed now we're going to need
    to download the data that I'll be using for most of this series Now for anyone
    who's been watching my latest videos you know that I like to use the stack overflow
    developer survey for different kinds of data analysis Now the reason I like to
    use this data is because it's realwld data and it has a lot of data in there that
    I think would be interesting to most people who are watching these types of videos。
  prefs: []
  type: TYPE_NORMAL
- en: I've seen some other tutorials where the data just seems kind of unrealistic
    and not very relatable So hopefully using this data will keep people interested
    and also give you a good idea of what it's like to actually download real data
    from a source and start analyzing it with pandas。
  prefs: []
  type: TYPE_NORMAL
- en: So to download this data I have this pulled up here in the browser we can go
    over to the stack overflow survey results page Now this is easy。Toed if you just
    Google it。 but just to keep things easy。 I'll have a link to this download page
    in a description section as well。 Okay， now on this page。 you can download the
    data in CSv form for any year that they have available。
  prefs: []
  type: TYPE_NORMAL
- en: And now I'm going to go ahead and download the 2019 data， which is the top data
    here。 So I'm going to download this cv here and then we'll click on download again
    and this should go ahead and download this for us。 Okay it did and now I'm going
    to open this in my finder here。 and I'm going to unzip this data。 it comes in
    a zip drive。 and once that data is downloaded and unzipped。
  prefs: []
  type: TYPE_NORMAL
- en: I'm going to go ahead and drag that folder to a folder here on my desktop。 And
    that's where we'll also create a notebook and analyze this data。 So real quick。
    I don't have this open。 let me open up this。![](img/5add6d4de51b5a268a6c0097836349e4_3.png)
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_4.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_5.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_6.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_7.png)'
  prefs: []
  type: TYPE_IMG
- en: Pandice demo folder。 and this will open this in finder。 And now I will take
    the data and drag this into this pandas demo folder that is on my desktop。 So
    your projects can be anywhere。 But I just had I just created a project folder
    here on my desktop called pandas demo。 And it's completely empty except for the
    data that we just dragged in here。
  prefs: []
  type: TYPE_NORMAL
- en: So now I'm going to rename this since this is kind of a long name here。 I'm
    just going rename this to data that was named developer survey 2019。 But I'm just
    going call that data so that it's easy for us to find that within our script。
    Okay。 so what files do we have here in the directory that we unzipped in this
    data directory。
  prefs: []
  type: TYPE_NORMAL
- en: let me make this a little larger here。 Okay， so first of all。 if you download
    data that comes with a readme。 Then this is usually helpful。 We have a readme
    file right here。 It tells you what these other files are going to be。 So in this
    case。 we have。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_9.png)'
  prefs: []
  type: TYPE_IMG
- en: Survey resultsultp cV and that contains the main survey results one respondent
    per row and one column per answer。 and the survey results schema here has the
    questions that correspond to each column name in the results。 Now if any of this
    doesn't make sense now then it will once we open up this data in Jupiter。 So I'm
    just given a broad overview here。 don't let this overwhelm you by everything that
    I'm saying here。
  prefs: []
  type: TYPE_NORMAL
- en: this will make a lot more sense once we open this up in Jupiter。 So let's go
    ahead and do that。 So to open this in a Jupiter notebook I'm going to go back
    to my terminal。 So I'm going to go ahead and close these finder windows open here。
    go back to my terminal And now within here I'm going to navigate to my folder
    where I place that data。
  prefs: []
  type: TYPE_NORMAL
- en: and this should be the same command on Mac Linux and Windows。 So I'm going to
    say C and I'm going to go to my desktop。 This is going to be wherever your project
    directory is。![](img/5add6d4de51b5a268a6c0097836349e4_11.png)
  prefs: []
  type: TYPE_NORMAL
- en: But mine is in this panda demo on my desktop， and once I am navigated to that
    directory to start up a Jupiter notebook。 we just need to say Jupiter notebook。And
    run that。 And we should see a server start up here。 And it seems like it's taken
    a second。 Okay， there we go。 Now， back in our terminal here。 this will run a Jupyter
    server。 And you will need to leave that terminal open while you're working in
    Jupiter。
  prefs: []
  type: TYPE_NORMAL
- en: So Jupiter run runs in the browser so if you shut down this server。 then you
    won't be able to access our notebook。 Okay， so let's go back here to the browser。
    and this is where we have our Jupyter notebooks。 So let me zoom in here so that
    we can so that everybody can read this fairly well。 Okay， I'll zoom into about
    right there， I think is good。 Okay。
  prefs: []
  type: TYPE_NORMAL
- en: so we can see our data folder here that we downloaded and placed in our Jupyter
    demo folder a little bit ago。 But now let's create a new notebook So to create
    a new notebook。 I'm going to click on new up here at the top right， and then I'm
    going to use Python 3。😊。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_13.png)'
  prefs: []
  type: TYPE_IMG
- en: And now we can name our notebook。 So up here where it says untitled。 I'm going
    to click here and I'm just going to call this pandas demo and rename that。 Okay。
    so now we're ready to start using pandas so we can import this by saying import
    pandas as PDD now importing pandas as PDD is just a common convention when using
    pandas。 So let's run that。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_15.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_16.png)'
  prefs: []
  type: TYPE_IMG
- en: And I ran that cell by pressing shift and enter。 And again。 I'm not going to
    go into the specifics of working here within Jupiter in this series。 but if you'd
    like a rundown of the features and shortcuts that I'll be using。 then I do have
    a link to my Jupyter video in the description section below。 Okay。
  prefs: []
  type: TYPE_NORMAL
- en: so for the rest of this video。 We'll see how to load in our data。 and look at
    some information about that data。 So our data is in a CV format。 So in order to
    read in that CV， we can simply say D F， which is going to stand for data frame。
    We'll learn about all about data frames here in a bit。
  prefs: []
  type: TYPE_NORMAL
- en: we're going say D F is equal to P D dot read underscore CV。 We're going to use
    the read CSV method from pandaice here。 And now we just want to pass in a path
    to our CV file。 Now， mine was within that data folder。 and that was within the
    file。 survey underscore results underscore public。😊，CSV。
  prefs: []
  type: TYPE_NORMAL
- en: So now if I hit shift in。Then that will run that cell。 So right off the bat。
    we can see that this is pretty simple to work with。 So when using native Python
    in order to read in a CV file。 we need to use the Cv module to create a CSV reader
    and things like that。
  prefs: []
  type: TYPE_NORMAL
- en: But here we're just doing this all in one line。 So when it reads this in。 it's
    going to read it in as a data frame。 So data frames are pretty much the backbone
    of pandas and we'll go more into we'll go over data frames and series objects
    in depth in the next video。
  prefs: []
  type: TYPE_NORMAL
- en: But for the basics， a data frame is basically just rows and columns of data。
    we can see what a data frame looks like。 But just by printing it out。 And this
    is the great thing about using Jupiter notebooks。 because it allows us to visualize
    these things in ways that we can't do in other editors。
  prefs: []
  type: TYPE_NORMAL
- en: So here in Jupiter， I can simply just say D F。 And run that。 And it will print
    out our。😊。Data frame here。 So we didn't even need to wrap this here in a print
    function。 Now。 if you're using a normal editor， then you can still print out data
    frame information。 but it's not going to look as good as it does here in Jupiter
    where we get this interactive table So this is a small look at our data。
  prefs: []
  type: TYPE_NORMAL
- en: Now this is actually 85 columns here， but if I scroll through these。 then it
    doesn't look like there's actually 85 columns printed out here。 So this is actually
    concatenated by default， just to give us a broad overview of the data。 So by default，
    Jupiter is displaying 20 columns from our data frame。 Now。
  prefs: []
  type: TYPE_NORMAL
- en: how did I know that there was 85 columns for this data frame。 Well。 there are
    a few attributes and methods that we can use to get an idea of what our data looks
    like。 So first， we have the shape attribute and shape。Gives us the number of rows
    and columns in a tuple form。 So let's look at this。 So in our next cell down here，
    I'm going to say D F。Dot shape。
  prefs: []
  type: TYPE_NORMAL
- en: And I will run that。 Now this is an attribute here。 It's not a method。 So you
    don't want to put parentheses。 So Df dot shape。 And we can see that we have 88000
    rows and 85 columns。 Now， if you wanted a bit more information。 then we can use
    the info method。 The info method will give us the number of rows and columns。
  prefs: []
  type: TYPE_NORMAL
- en: And also all of the data types of all the columns as well。 Now， before I run
    that。 it looks like my text is getting cut off here a little bit。 Sometimes this
    happens whenever I'm within Jupiter。 in order to fix this。 I usually just come
    up here and restart and run all my cells again。
  prefs: []
  type: TYPE_NORMAL
- en: that usually takes care of the problem。 Let's see if that works。 Okay， so that
    seemed to work。 another thing that you can do here is just to totally reload the
    page and the browser。And when you reload the page， I think it's just because of
    how my I have this text enlarged。 so it's kind of messing with how these look，
    but now we can see these just fine。 Okay。
  prefs: []
  type: TYPE_NORMAL
- en: so like I was saying we can see here that we have 88883 rows and 85 columns
    Now if you wanted more information。 then we can use the info method and that will
    give us the number of rows and the number of columns。 but also all of the data
    types of the columns So let's run that So if I do Df do info。 oops Df do info。
    Now this actually is a method So we do want to put the parentheses there and let
    me run this and now let's go over this output So we can see here that it says
    that we have 88883 entries。
  prefs: []
  type: TYPE_NORMAL
- en: So those are our rows we have a total of 85 columns and then it lists all of
    our columns here for。Data so these are all the columns in our CSv file that we
    have loaded in Now it also gives us the data types of each of these columns and
    we're gonna to go over data types and a future video but for the most part objects
    usually mean strings and then we have other things as well So int 64 is just an
    integer float is a float so a probably a decimal number and there are no other
    data types in this data but there are more data types in general So I will be
    sure to do a video on data types specifically in the near future Okay so now that
    we know the number of rows and columns let's change a setting here within Jupiter
    so that we can see all of the columns so I think it would be useful to see all
    of these if we'd like to even if there are a lot of these to scroll through so
    to do this we can。
  prefs: []
  type: TYPE_NORMAL
- en: Change a setting and I'm going to come down here to the bottom here。 and I'm
    going to change a setting by saying PDd。 set_ option。And within here。 I will say
    display dot max underscore columns。And I will set that equal to 85 so that we
    can see all of our columns and I will run that。 And now if we print out our data
    frame。 so I'm going to go back up here to where we printed out this data frame
    and I will rerun that cell and now if I scroll through these columns。
  prefs: []
  type: TYPE_NORMAL
- en: then we can see that now it looks like we actually have these 85 different columns
    here。 So I can keep scrolling and keep scrolling and it didn't just chop us off
    at that 20 like it was before。 Now， obviously the rows are also being concatenated
    here。 and we definitely don't want to print out all 89000 of these rows。
  prefs: []
  type: TYPE_NORMAL
- en: but there probably are some examples with certain data sets where you might
    want to see all of the rows as well。 So for example， I said that the survey results
    schema cv file that was included in our download gives the matching questions
    for all of these column names here。
  prefs: []
  type: TYPE_NORMAL
- en: So if we wanted to see what these column names here mean for this data。 then
    we can load in that schema CSv file as well， so let me do this I'll go down to
    the bottom of our notebook and I will just load this in by saying schema underscore
    Df Now I don't want to just call this Df because we don't run overwrite our other
    data frame and I will load this in just like we saw before by saying PDdread underscore
    CSsv and this is within the data folder and this was called survey underscore
    results underscore schema cv so I will run this and now let's look at this schema
    data frame that we just load it in so here we on this column column here this
    gives us all of the columns in our other data frame so we have。
  prefs: []
  type: TYPE_NORMAL
- en: main branch， hobbyist， And if I scroll up to that data frame here。I'm going
    to delete this info here since we no longer need that。 If I scroll up to this
    data frame here， then we can see respondent main branch hobbyist。 so if we want
    to know what these mean， then that's what we use the schema for so we can see
    that main branch or hobbyist means do code as a hobby main branch means which
    of the following options best describes。
  prefs: []
  type: TYPE_NORMAL
- en: Now it actually concatenateates the text to in order to actually see the full
    text we could either change an option or we could just access this value directly。
    and I will be showing you how to do that in the next video But for now we can
    see that we can't see all of the rows to the questions that correlate to each
    column name here。
  prefs: []
  type: TYPE_NORMAL
- en: remember we have 85 columns。 But for here we can only see the first five and
    then we get this ellipses here and then we can see the last five。 So let's set
    this up。That we can view 85 rows and then reprint this so that we can see all
    of these。 So back in the same cell where we set our max columns now let's also
    add one for rows as well。 So I'm just going to copy and paste that but instead
    of max columns here。
  prefs: []
  type: TYPE_NORMAL
- en: I'm going to have this be max rows and I will run that and now we will rerun
    this schema here。 and now we can see that we can see all of the columns and the
    corresponding question text。 So if you wanted to know what any of these columns
    mean then this is how we do it so we can see I person the question was are you
    the I support person for your family。 So that's probably a yes or no question
    So that is what those mean So if you're going through this data on your own then
    you can use this as a reference anytime you don't know what a certain column means
    in our survey data and if you don't。
  prefs: []
  type: TYPE_NORMAL
- en: Or if you don't want to look through all of these to find a specific row or
    a specific column name。 then in a future video， we're going to learn about filtering
    data frames and see how we can just grab a specific row where the column equals
    a certain value so now we have all 85 rows visible of our schema data frame here
    but you might be thinking。
  prefs: []
  type: TYPE_NORMAL
- en: well， that's nice， but I don't want to see 85 rows of my survey data every time
    I want to look at it but there are a couple of methods that we can use to only
    see a certain number of rows。 which you'll most likely use a lot just to get an
    idea that your filters and data frames seem to be working correctly So we can
    see the first five rows by saying instead of doing Df here。
  prefs: []
  type: TYPE_NORMAL
- en: we can say Df do head And if I run that then we just get the first five rows
    here Okay and you can pass in a。If you want to see a certain number of values
    so if you wanted to see the first 10 rows。 then we could pass in a 10 to df do
    head and this gives us the first 10 rows so we can see it goes all the way down0
    through 9 there Now if you'd like to see the last rows instead of the first rows
    then we can use the tail method instead So if we say Df do tail and we could use
    it without a number also。
  prefs: []
  type: TYPE_NORMAL
- en: but if we pass in a number just like with head then now we're gonna say that
    we want the last 10 entries here in our data。 So those are the last 10 items of
    our data。 Okay so this is a brief overview of getting pandas installed and then
    downloading our data and loading our data in to Jupiter and how to read this in
    now before we end here。
  prefs: []
  type: TYPE_NORMAL
- en: I'd like to mention the sponsor of this video and that is brilliant org So in
    this series。 we've been learning about pandas and how。![](img/5add6d4de51b5a268a6c0097836349e4_18.png)
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_19.png)'
  prefs: []
  type: TYPE_IMG
- en: Analyze data in Python and brilliant would be an excellent way to supplement
    what you learn here with their handson courses may have some excellent courses
    and lessons that do a deep dive on how to think about and analyze data correctly
    for data analysis fundamentals。
  prefs: []
  type: TYPE_NORMAL
- en: I would really recommend checking out their statistics course。 which shows you
    how to analyze graphs and determine significance in the data。 and I would also
    recommend their machine learning course which takes data analysis to a new level
    while you'll about the techniques being used that allow machines to make decisions
    where there's just too many variables for a human to consider So to support my
    channel and learn more about brilliant。
  prefs: []
  type: TYPE_NORMAL
- en: you can go to brilliant org cs to sign up for free。 And also the first 200 people
    they go to that link will get 20% off the annual premium subscription。 and you
    can find that link in the description section below again。 that's brilliant org
    for c so I think that is going to do it for our first pandas video I hope you
    feel like you got a good introduction on how to install pandas and load in your
    data to。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_21.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_22.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_23.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5add6d4de51b5a268a6c0097836349e4_24.png)'
  prefs: []
  type: TYPE_IMG
- en: Jupiter notebook in the next video， we're going be learning more about data
    frames and also learn about the series data type。 So we'll learn how we can think
    about data frames in a way that's easier to understand and also see how we can
    grab certain elements columns and rows from these as well。
  prefs: []
  type: TYPE_NORMAL
- en: So be sure to stick around for that。 But if anyone has any questions about what
    be covered in this video then feel free to ask in the comment section below and
    I'll do my best to answer those。 And if you enjoy these tutorials and would like
    to support them then there are several ways you can do that。
  prefs: []
  type: TYPE_NORMAL
- en: The easiest ways to simply like the video and give it a thumbs up And also it's
    a huge help to share these videos with anyone who you think would find them useful
    And if you have the means you can contribute the Patreon。 And there's a link to
    that page in the description section below be sure to subscribe for future videos
    and thank you all for watching。
  prefs: []
  type: TYPE_NORMAL
- en: 😊。![](img/5add6d4de51b5a268a6c0097836349e4_26.png)
  prefs: []
  type: TYPE_NORMAL
