- en: 【双语字幕+资料下载】SQL常用知识点合辑——高效优雅的学习教程，复杂SQL剖析与最佳实践！＜快速入门系列＞ - P17：L17- LIMIT 运算符
    - ShowMeAI - BV1Pu41117ku
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 【双语字幕+资料下载】SQL常用知识点合辑——高效优雅的学习教程，复杂SQL剖析与最佳实践！＜快速入门系列＞ - P17：L17- LIMIT 运算符
    - ShowMeAI - BV1Pu41117ku
- en: '![](img/9fdb6991c94c6629bfbb30c9e40830d4_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fdb6991c94c6629bfbb30c9e40830d4_0.png)'
- en: 哦。In this tutorial， I'm going to show you how to limit the number of records
    returned from your query。 For example， when we execute this query， we get all
    the customers and the customer table。 so we have 10 customers here。😊，Now， what
    if we only want to get the first three customers。 that's where we use the limit
    clause， let me show you so。After from， we type out limit3。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 哦。在本教程中，我将向你展示如何限制从查询中返回的记录数。例如，当我们执行这个查询时，我们获得了所有客户和客户表。所以我们在这里有10个客户。😊，现在，如果我们只想获取前三个客户怎么办？这就是我们使用限制子句的地方，让我给你演示一下。所以在from之后，我们输入limit
    3。
- en: And this will return only the first three customers。If the argument that we
    pass here is greater than the number of records that our query produces we'll
    get all the records in the query result。 for example， if I pass 300 here， obviously
    we don't have 300 customers in this table。 so when we execute this query we'll
    get all the 10 customers in this table。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这将仅返回前三个客户。如果我们传递的参数大于我们的查询产生的记录数，我们将得到查询结果中的所有记录。例如，如果我在这里传递300，显然我们在这个表中没有300个客户。因此，当我们执行这个查询时，我们将得到这个表中的所有10个客户。
- en: so this is how the limit clause works。😊，Now here we can optionally supply an
    offset。 and this is very useful in situations where we want to paginate the data。
    For example。 let's say we have a website and on this website we have a web page
    for the user to see all the customers in the database。 Now for simplicity， let's
    imagine we want to show only three customers per page。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这就是限制子句的工作原理。😊，现在我们可以选择性地提供一个偏移量。这在我们想要分页数据的情况下非常有用。例如，假设我们有一个网站，在这个网站上有一个网页供用户查看数据库中的所有客户。现在为了简单起见，假设我们每页只想显示三个客户。
- en: So what are the customers that we're going to have on page one。😊，We're going
    to have customers， one。 two， three。On page two， we're going to have customers
    4，56， and on page 3。 we're going to have customers 7，8，9。😊，Now let's say we want
    to write to query to retrieve the customers on page 3 how can we do that Well。
    we want to skip the first six records and then pick three records right so we
    change our limit clause to something like this。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们在第一页上会有什么客户呢？😊，我们会有客户，1，2，3。在第二页，我们会有客户4，5，6，在第三页，我们会有客户7，8，9。😊，现在假设我们想写一个查询来检索第三页的客户，我们该怎么做呢？我们想跳过前六条记录，然后选择三条记录，对吧，所以我们把限制子句改成这样。
- en: 😊，Limit 6 and 3。So6 is what we call an offset， and that basically tells myqQL
    to skip the first six records and then pick three records。 Let's execute this
    query。😊，All right， now we get。Customers，7，8 and 9。![](img/9fdb6991c94c6629bfbb30c9e40830d4_2.png)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 😊，限制为6和3。所以6是我们所称的偏移量，这基本上告诉mySQL跳过前六条记录，然后选择三条记录。让我们执行这个查询。😊，好的，现在我们得到。客户，7，8和9。![](img/9fdb6991c94c6629bfbb30c9e40830d4_2.png)
- en: '![](img/9fdb6991c94c6629bfbb30c9e40830d4_3.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fdb6991c94c6629bfbb30c9e40830d4_3.png)'
- en: Now， for your exercise， I want you to get the top three loyal customers。 These
    are the customers that have more points than everyone else。All right， first。 we
    select everything from the customers table。😊，Now we need to order these customers
    by their points in descending order。So if you look at the query result， you can
    see that customers are sorted by their loyalty。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对于你的练习，我希望你获取前三个忠实客户。这些客户的积分比其他人都高。好的，首先，我们从客户表中选择所有内容。😊，现在我们需要按积分降序排列这些客户。所以如果你查看查询结果，你会看到客户按忠诚度排序。
- en: so the most loyal customers come first now we want to pick only the first three
    customers and that's where we use the limit clause。 so limit 3。😊，Let's execute
    this query。And these are the most loyal customers， customers with IDs， 5。6， and3。Now
    here's one thing I want you to remember， and that is the order of the limit clause。
    the limit clause should always come at the end， so first we have the select clause
    then we have from optionally we can have where followed by order by and finally
    limit the order of these clauses matters if you change the order My SQL is going
    to yell at you so pay attention to the order when writing your queries。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所以最忠诚的客户首先出现，现在我们只想选择前三位客户，这就是我们使用 limit 子句的地方。所以 limit 3。😊，让我们执行这个查询。这些就是最忠诚的客户，客户
    ID 为 5、6 和 3。现在我希望你记住一件事，那就是 limit 子句的顺序。limit 子句应该始终放在最后，所以首先我们有 select 子句，然后是
    from，可选的我们可以有 where，接着是 order by，最后是 limit。这些子句的顺序很重要，如果你改变顺序，My SQL 会对你大喊大叫，所以在编写查询时请注意顺序。
- en: 😊。![](img/9fdb6991c94c6629bfbb30c9e40830d4_5.png)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 😊。![](img/9fdb6991c94c6629bfbb30c9e40830d4_5.png)
- en: Oh。![](img/9fdb6991c94c6629bfbb30c9e40830d4_7.png)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 哦。![](img/9fdb6991c94c6629bfbb30c9e40830d4_7.png)
