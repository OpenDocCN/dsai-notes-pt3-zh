- en: 【双语字幕+资料下载】OpenCV 基础教程，安装、原理、实战， 3小时带你搞定这个热门计算机视觉工具库！＜实战教程系列＞ - P9：第6章：图像拼接
    - ShowMeAI - BV1zL411377L
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 【双语字幕+资料下载】OpenCV 基础教程，安装、原理、实战，3小时带你搞定这个热门计算机视觉工具库！＜实战教程系列＞ - P9：第6章：图像拼接 -
    ShowMeAI - BV1zL411377L
- en: '![](img/d62f591918ca0ed4ff2eac2c929e70f1_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d62f591918ca0ed4ff2eac2c929e70f1_0.png)'
- en: '![](img/d62f591918ca0ed4ff2eac2c929e70f1_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d62f591918ca0ed4ff2eac2c929e70f1_1.png)'
- en: 。So now we are going to learn how to join images together now this can be useful
    if you have a lot of images and you are running it again and again。So it's hard
    to manage all these windows together， so we will put all the images together in
    one window。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要学习如何将图像连接在一起，这在你有很多图像并且需要反复运行时会很有用。因此，管理所有这些窗口会很困难，所以我们会把所有图像放在一个窗口中。
- en: So let's see how we can do that so we have a image here by the name Lina in
    the resources folder and。We are going to stack it with itself， so first we are
    going to use the horizontal stack function。So horizontal here， we will say Nmpy
    dot Now these are Ny functions， not open CV functions。 so we will use Numpy horizontal
    stack。And we will write our image first， the first image is image。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何做到这一点，我们在资源文件夹中有一个名为 Lina 的图像。我们将用它自己来堆叠，所以首先我们将使用水平堆叠函数。所以在这里，我们将说 Nmpy
    dot。这些是 Npy 函数，而不是 OpenCV 函数。所以我们将使用 Numpy 的水平堆叠。我们将首先写我们的图像，第一个图像是图像。
- en: and then image again。So let's display this I am show。So let's display this Cv2。
    im show。Our window name is horizontal。And we will write our image。Actually， it's
    better to write I G。😔。Horizontal， and then。IMT。Horizontト。So let's run that。😔，And
    there you go。 So now we have the image stacked together with itself in the horizontal
    direction。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 然后再次显示图像。所以让我们显示这个，我是 show。让我们显示这个 Cv2。im show。我们的窗口名称是 horizontal。我们会写我们的图像。实际上，最好写成
    I G。😔。Horizontal，然后 IMT。Horizontト。所以让我们运行它。😔，看吧。现在我们已经将图像在水平方向上堆叠在一起了。
- en: Now let's do the vertical。So image vertical is equals to NP dot for vertical
    stack。And then we will define image and image。So we will copy this。Paste it down，
    image vertical。And we will call this vert。Okay， so now we have two images。 one
    horizontally stacked and one vertically stacked。Now there are few issues with
    this method。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们做垂直堆叠。图像垂直等于 NP dot for vertical stack。然后我们将定义图像和图像。所以我们会复制这个。粘贴下来，图像垂直。我们会称之为
    vert。好的，现在我们有两幅图像，一个是水平堆叠的，一个是垂直堆叠的。现在这个方法有一些问题。
- en: one we cannot resize the image， it will come as it is。 so if I wanted to stack
    two more images on the right hand side。 it will take up the whole space or it
    might go out of the frame。So the other issue is that if the images do not have
    the same number of channels。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们无法调整图像大小，它会保持原样。所以如果我想在右侧再堆叠两幅图像，它会占用整个空间，或者可能会超出框架。另一个问题是，如果图像没有相同数量的通道。
- en: which means they are not RGB， both of them or maybe one of them is gray， one
    of them is RGB。 then it will not work so both of them have to have the same number
    of channels because we are talking about matrices。So what is the solution for
    that so for that I have created a small function that can be called and it can
    handle all these things。 so all you need to know is how to call that function。So
    let's look at that function。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着它们不是 RGB，两个都可能是灰度图像，或者一个是灰度，另一个是 RGB。这样的话就会不工作，所以它们必须有相同数量的通道，因为我们在讨论矩阵。那么解决方案是什么呢？为此，我创建了一个小函数，可以调用它来处理这些问题。所以你需要知道的就是如何调用那个函数。让我们来看看那个函数。
- en: I will copy that here。So， I will。Just。Comment this out。 and at the top， I will
    add the function。So here we have our function。Let's bring this down。So you do
    not need to worry about all the details of this function。You just need to know
    that it stacks images together， how to use it， this is what you need to know。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我会在这里复制它。所以，我会。只是。注释掉这一部分。然后在顶部，我会添加这个函数。所以这里就是我们的函数。让我们把它放下来。你不需要担心这个函数的所有细节。你只需知道它如何将图像堆叠在一起，以及如何使用它，这就是你需要知道的。
- en: so let me explain how it works So what you need to do is you need to create
    an image stacks。 for example， you can say image。Stack is equals2。 Now you will
    call the function。Stack images and then as it mentions you have to mention the
    scale so you can scale all the images down and you can scale them up as well。
    so let's say we will put 0。5 as the scale and then you need to define the matrices
    of the images。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我解释一下它是如何工作的。你需要创建一个图像堆叠。例如，你可以说 image.Stack 等于。现在你将调用函数 Stack images，然后如上所述，你必须提到比例，所以你可以将所有图像缩小，也可以放大它们。所以我们假设我们将比例设为
    0.5，然后你需要定义图像的矩阵。
- en: So let's say I have image， image and。Image。So this will give us a horizontal
    stack we need to display it。 so let's copy that。😔，And we will right here。Iage
    stack。And we will write here， image。なか。So there you go。 So now it's scaled down
    and we have three images together。 So now if we wanted to add the vertical stack，
    we will just add a comma and then we can add another row。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我有图像，图像和。图像。这将给我们一个需要显示的水平堆叠。因此让我们复制一下。😔，我们将在这里写。图像堆叠。我们将在这里写，图像。なか。所以好了。现在它缩小了，我们有三张图像在一起。所以现在如果我们想要添加垂直堆叠，我们只需添加一个逗号，然后可以再添加一行。
- en: But again， if if you have three columns in the first row。 then you have to have
    three columns in the second， so it's quite intuitive anyway。 so here you can see
    you have。Easily， you can stack all the images together and even if it's one of
    the images is not the same channels。 you can still stack them together， so let
    me demonstrate that image gray is equals to C2 dot。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，如果你在第一行有三列，那么在第二行也必须有三列，这其实很直观。因此你可以看到，轻松地将所有图像叠加在一起，即使其中一张图像的通道不同，你仍然可以将它们叠加在一起。让我演示一下，图像灰度等于C2点。
- en: CBT color， and then we can put our image and C2 dot color， BGR2 gray， and we
    can put。 let's say in the middle here。The gray image， so let's run that。And there
    you go。 so you have a gray image stacked with the other。![](img/d62f591918ca0ed4ff2eac2c929e70f1_3.png)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: CBT颜色，然后我们可以将我们的图像和C2点颜色，BGR转灰，并且我们可以放在中间这里。灰度图像，所以让我们运行一下。好了，你有一个灰度图像与其他图像叠加在一起。![](img/d62f591918ca0ed4ff2eac2c929e70f1_3.png)
- en: Colored images。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 彩色图像。
