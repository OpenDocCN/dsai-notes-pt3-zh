- en: 【双语字幕+资料下载】T81-558 ｜ 深度神经网络应用-全案例实操系列(2021最新·完整版) - P8：[讲座] 使用 CONDA 安装 TensorFlow／Keras
    CPU／GPU版本 - ShowMeAI - BV15f4y1w7b8
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 【双语字幕+资料下载】T81-558 ｜ 深度神经网络应用-全案例实操系列(2021最新·完整版) - P8：[讲座] 使用 CONDA 安装 TensorFlow／Keras
    CPU／GPU版本 - ShowMeAI - BV15f4y1w7b8
- en: Hi， this is Jeff Heaating。 Welcome to applications of deep neural networks with
    Washington University。 So to get going in this class， you need to be able to run
    the examples。 run your assignments and get them running。 It's working in Python。
    So you're using Tensorflow with Kis in Python。 You can install this all onto your
    own computer。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 嗨，我是杰夫·希顿。欢迎来到华盛顿大学的深度神经网络应用课程。为了在这门课中开始，你需要能够运行示例，完成作业并使其正常运行。它是在Python中工作。因此，你将使用Tensorflow与Keras在Python中。你可以将这些全部安装到自己的计算机上。
- en: And in this video， I talk about how to do this to see all my videos about Cale
    neural networks and other AI topics。 click the subscribe button and the bell next
    to it and select alt to be notified of every new video。 If you don't want to install
    a lot of software on your computer。 maybe you're not as technical with dealing
    with the command line。 Then I recommend Google coab。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个视频中，我讲解如何做到这一点，查看我关于卷积神经网络和其他AI主题的所有视频。点击订阅按钮和旁边的铃铛，并选择所有，以接收每个新视频的通知。如果你不想在计算机上安装很多软件，也许你对命令行的处理不太熟悉。那么我推荐Google
    CoLab。
- en: Either way， you're gonna have access to a GPU， which is a graphics processing
    unit。 Now。 you may not have a GPU that's compatible on your actual computer needs
    to be Nvidia。😊。![](img/a16e1b74716826f74e6f5876073581a1_1.png)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不管怎样，你都将能访问一个GPU，即图形处理单元。现在，你的实际计算机上可能没有兼容的GPU，需要是Nvidia。😊。![](img/a16e1b74716826f74e6f5876073581a1_1.png)
- en: '![](img/a16e1b74716826f74e6f5876073581a1_2.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_2.png)'
- en: And it needs to be one of the later ones。 you can Google the capabilities of
    the GPU in your actual machine and find that out。The GPU is， it's a card basically
    there。 I'm using a Titan which is fairly high end one in this computer。 but I
    recommend you maybe try this on your computer， try it and coab， see what works
    best with you。In this video， we're going to see how to install Python with Tensorflow
    and Kes on your computer。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 并且它需要是较新的版本。你可以在网上搜索你实际机器中GPU的能力并找出。GPU基本上是一个显卡。我在这台电脑上使用的是Titan，属于相当高端的产品。但我建议你在自己的电脑上尝试一下，试试CoLab，看看哪个最适合你。在这个视频中，我们将看到如何在计算机上安装Python与TensorFlow和Keras。
- en: I'll cover both how to do it with a GP and just straight up CPU。 due to some
    advances in Anaconda Python。 Those two processes are really pretty similar。 Okay。
    let's start with the installation process。 Okay， I'm going to show you now how
    to install the。Fileles that you need to actually use TensorFlow for either the
    CPU or the GPU will cover both。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我将介绍如何在GPU和纯CPU上进行操作，得益于Anaconda Python的一些进展。这两个过程实际上非常相似。好吧，让我们开始安装过程。现在，我要向你展示如何安装所需的文件，以便实际使用TensorFlow，无论是CPU还是GPU，我都会覆盖这两个方面。
- en: and this allows you to run the class examples for my applications of Deep neural
    networks class。Even if you're not following along with my class， this will get
    you a Conda environment set up so that you are in a good place to actually begin
    working with TensorFlow and Ks。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许你运行我的深度神经网络应用课程的示例。即使你没有跟随我的课程，这也会为你设置一个Conda环境，使你能够在使用TensorFlow和Keras时处于良好状态。
- en: Now I'm starting with a brand new fresh install of windows。 So that's why it's
    saying activate windows。 I do actually pay for Windows。 It's just when I install
    it for just something that I'm going throw away within a day。 I usually don't
    activate。 I don't want to confuse the the Microsoft activation server。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我开始的是全新安装的Windows。所以这就是为什么它显示激活Windows。我确实为Windows付费。只是在我安装它用于短期用途时，通常不会激活。我不想混淆微软激活服务器。
- en: which it would probably figure out okay So this is a clean build， I do have
    Chrome installed。 I am mostly familiar with Chrome。 I'm not that familiar with
    edge。 So I want to not be tripping over unfamiliar software。 and that really doesn't
    matter to the install。 What we're gonna do is if you search for Jeff Heaton and
    Github。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会很好地解决问题。所以这是一个干净的构建，我已经安装了Chrome。我对Chrome比较熟悉，对Edge不太熟悉。因此，我想避免在不熟悉的软件上绊倒。这实际上对安装没有太大影响。我们要做的是如果你搜索杰夫·希顿和Github。
- en: you can see my Github here and the files and instructions that you need are
    here。 And if you go to T 8 to1 applications of deep learning。 This is it go ahead
    and go into well while you're here at the main page。 go ahead and click code and
    download a zip。 You can also use。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里查看我的Github，所需的文件和说明都在这里。如果你去查看深度学习的T 8到1应用。这就是，继续访问主页，点击代码并下载一个zip文件。你也可以使用。
- en: '![](img/a16e1b74716826f74e6f5876073581a1_4.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_4.png)'
- en: Clone， depending on how sophisticated with get you are。 But this will work just
    fine。 So downloads that zip file while that's downloading。 I am going to go ahead
    and go into the install folder that I have set up here。 I've got a couple of these
    here。 if there is a newer one here。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 克隆，取决于你对git的熟悉程度。但这会很好用。所以在下载这个zip文件时，我将进入我在这里设置的安装文件夹。我这里有几个，如果这里有更新的版本。
- en: Probably try to find the YouTube video that goes along with that because this
    does change。 this is the July 2020 version， I will try to keep that one there
    as long as possible。 I'll only rerecord the video or create a new file of that。
    if it changes so much that this video is just no longer relevant。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 可能要尝试找到相关的YouTube视频，因为这确实会发生变化。这是2020年7月的版本，我会尽量保持这个版本的存在。只有在它的变化如此之大，以至于这个视频不再相关时，我才会重新录制视频或创建新文件。
- en: But I tend to rerecord this at least once a year。 Google always makes some sort
    of change to how this goes that that causes me to rerecord So we'll go ahead and
    open this one。Essential what I'm telling you to do here is install minconda。 you
    can use Anaconda if you prefer Ananaconda has every package and its brother known
    to man。Installed， I tend to like to be more minimalistic， but this is a personal
    thing。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 但我倾向于每年至少重新录制一次。Google总是会对这个过程进行某种更改，导致我需要重新录制。所以我们继续打开这个。基本上我告诉你的是安装minconda。如果你更喜欢，可以使用Anaconda，Anaconda包含所有已知的包和组件。安装时，我倾向于更简约，但这是个人选择。
- en: You can install whichever one you desire。 But let me go ahead and go to the
    Mincona link。 I'm opening in another browser so that I can get back to it。 We're
    gonna install Python 3。74 Windows。 The Mac installation is really mostly the same
    as this video。 I'll probably record a Mac specific version of this video。 at a
    later time。 Okay。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以安装你想要的任何一个。但让我去Mincona的链接。我在另一个浏览器中打开，以便可以回到这里。我们将安装Python 3.74 Windows。Mac安装实际上与这个视频基本相同。稍后我可能会录制一个特定于Mac的视频。好吧。
- en: we're going to use Python 3，7 and 64 B。 If you happen to have a 32 B machine。
    Tensorflowlow is not gonna work anyway。 use Google coab。 Also。 if you're just
    not a software installation person。 You're more of just a coder。 not not a command
    line hacker。 Google coab is great and highly recommend。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Python 3，7和64位。如果你恰好有32位机器，Tensorflow是无法工作的。使用Google colab。此外，如果你不太擅长软件安装，更多的是一个编码者，而不是命令行黑客，Google
    colab非常棒，我强烈推荐。
- en: So let me get this downloading。 It should be pretty quick， but I'll fast forward
    through it。 Okay。 once you've got that， go ahead and run it。 I just double clicked
    it。Click next。 agree。 I prefer to install it really just for me。 I don't tend
    to have multiuser computers。 but and that directory is fine。 It's under my user
    directory。 Always remember where it is。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我来下载这个。应该很快，但我会快进过去。好吧。一旦你下载好了，就去运行它。我只是双击了它。点击下一步。同意。我更倾向于只为自己安装。我一般不使用多用户计算机。但那个目录是可以的，位于我的用户目录下。始终记得它在哪里。
- en: because you may end up going there to adjust things later。 I do vary from the
    default on this one。 I prefer to add it to my path environment。 You can use the
    Ananaconda prompt as well。 Both of them should work without changes to these instructions。
    The only case where this might mess you up is if you have other software on your
    machine that is dependent on a version of Python they previously installed and
    changing that global path is going to force them to use this new version that
    you're installing。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因为你可能会去那里调整一些设置。我在这方面会有些不同于默认设置。我更喜欢将其添加到我的路径环境中。你也可以使用Anaconda提示符。两者都应该在没有更改这些说明的情况下工作。唯一可能让你困惑的情况是，如果你的计算机上有其他依赖于之前安装的Python版本的软件，更改全局路径将强制它们使用你正在安装的新版本。
- en: So be aware of that。 I'll click install。 The Ananaconda installation will take
    much longer than the Minneconda installation。 So this should go through pretty
    quick。 All right， and we're pretty much there。 So click next。 and I don't need
    tutorials， and I don't need to learn more about Anaconda。All right。 so now that's
    installed。Before we get too far with this， that file that you've downloaded。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以要注意这一点。我将点击安装。Anaconda的安装将比Miniconda的安装花费更长时间。所以这个应该很快就能完成。好的，我们差不多到了。点击下一步。我不需要教程，也不需要了解更多关于Anaconda的内容。好的，现在安装完成了。在我们继续之前，那个你下载的文件。
- en: I've got a couple of files in here from different things I was experimenting
    with on this build。 but you can ignore those。 This folder here， which is what
    you downloaded from my get repository。 I'll go ahead and open that Im to just
    drag it to the desktop for now needs to unzip it。 and I'll go to my user directory。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我这里有几个文件，是我在这个构建中实验时产生的不同内容。但你可以忽略它们。这个文件夹是你从我的Git仓库下载的。我现在就把它拖到桌面上，需要解压缩。然后我将进入我的用户目录。
- en: '![](img/a16e1b74716826f74e6f5876073581a1_6.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_6.png)'
- en: And just copy it into there。 So now I've got it ready to go。 These are all of
    the class examples that give you a few files to test it and other things。 There's
    really just two files that you actually need。 You can， you can download those
    as well。 if you don't want to download the whole thing。 So you successfully installed
    them in a Conda。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然后把它复制到这里。所以现在我已经准备好了。这些是所有的课堂示例，给你一些文件进行测试和其他内容。实际上你只需要两个文件。如果你不想下载整个文件，也可以单独下载它们。所以你已经成功地在Conda中安装了它们。
- en: Now you need to open a command prompt CD。 This might work in Powerhell， too。
    I'm not that familiar with Powerhell。 And I'm just going to do Conda install。
    minus y Jupiter。 We'll go in fast forward through this。 This might take a bit。![](img/a16e1b74716826f74e6f5876073581a1_8.png)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你需要打开一个命令提示符CD。这在PowerShell中也可能有效，我对PowerShell不太熟悉。我将执行Conda install -y jupyter。我们将快速前进。这可能会花一点时间。![](img/a16e1b74716826f74e6f5876073581a1_8.png)
- en: '![](img/a16e1b74716826f74e6f5876073581a1_9.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_9.png)'
- en: Okay， Jupiters installed。 Now what we're going to do is create a Conda environment。
    An environment holds all of the Python libraries and everything that you need
    for a particular project。 You get a base environment that you start out in。 I
    tend to just use that just to run Jupiter and I use the underlying environments
    to for each of the custom configurations that I need for various projects。 The
    other thing that's great about these environments is you can automatically install
    the GPU drivers that you need。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，Jupyter安装完成了。现在我们要做的是创建一个Conda环境。一个环境保存了所有Python库和你特定项目所需的一切。你从一个基本环境开始。我通常只是用它来运行Jupyter，并且使用底层环境来满足我在各种项目中所需的自定义配置。另一个很棒的地方是，你可以自动安装所需的GPU驱动程序。
- en: and it just greatly simplifies the installation。 and it prevents collisions。
    You might have an old environment that is using old coupa drivers。 a new environment
    that's using newer ones， and it just really takes a couple of hours off your installation
    time。 So I'm going go ahead and create a new Connda environment。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这极大地简化了安装，并防止了冲突。你可能有一个旧环境在使用旧的驱动程序，一个新环境在使用更新的驱动程序，这确实节省了你安装的时间。所以我现在就创建一个新的Conda环境。
- en: I'm just going to copy this and paste it into here。 Now the important things
    are Tensorflow。😊。Is the name of the environment。 you can call it whatever you
    want to。 Just make sure you change it in the subsequent command so that everything
    lines up。 and then this is the version of Python that we're using 3。7。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把这个复制并粘贴到这里。现在重要的事情是Tensorflow。😊。这是环境的名称。你可以随意命名。只要确保在后续命令中更改它，以便一切对齐。然后这是我们使用的Python版本3.7。
- en: The versions of Tensorflow that I am using for the fall 2020 semester that I'm
    setting this up far require or at least can use Python 3。7。 I will up this in
    the future as I modify these instructions each semester。 But for now it's Python
    37。 So I'm installing this。 say yes， we'll fast forward through this。 It's pretty
    quick。 Okay， it is done。 So now we're gonna do Conda。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我在设置2020年秋季学期时使用的Tensorflow版本要求至少使用Python 3.7。我将在将来修改这些说明时更新此信息。但现在是Python 3.7。所以我正在安装它。说“是”，我们将快速前进。这非常快。好的，安装完成了。现在我们要做Conda。
- en: Actate the command that I have here is the same that they're suggesting here。
    so conda activate。Tensorflow。And press enter， notice your prompt changes。 You're
    now in Tensorflowlow。 Now a lot of these commands that I have down here require
    that you be in this Tensorflow environment that you created。 whatever you happen
    to name it and won't work if you're not。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 激活我这里的命令是他们建议的命令。所以 conda activate Tensorflow。按下回车，注意你的提示符变化。你现在在 Tensorflow
    环境中。现在我这里有很多命令需要你在这个你创建的 Tensorflow 环境中执行，不管你给它起了什么名字，如果不在这个环境中是无法工作的。
- en: so make sure that if you're finishing this over a couple of passes that you
    always go back to kind of activate Tensorflow。![](img/a16e1b74716826f74e6f5876073581a1_11.png)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所以请确保如果你在几个步骤中完成这个，始终返回激活 Tensorflow。![](img/a16e1b74716826f74e6f5876073581a1_11.png)
- en: And a very common error that people always ask me about is you'll get a DLL
    error。 And if you get that， it's usually because you're not in the environment。
    So now let's run this Conda install N Bconda。 This just gives you some needed
    tools so that you can link this new environment to Jupiter notebooks。 Jupiter
    notebooks are basically the editor we're using on this course。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常常见的错误是人们总是问我的 DLL 错误。如果你遇到这个，通常是因为你不在环境中。所以现在让我们运行这个 Conda install N Bconda。这只是给你一些必要的工具，以便将这个新环境链接到
    Jupyter notebooks。Jupyter notebooks 基本上是我们在本课程中使用的编辑器。
- en: I'll fast for this and it's done。 Now we're ready to install Tensorflow。![](img/a16e1b74716826f74e6f5876073581a1_13.png)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我会快进到这里，然后就完成了。现在我们准备安装 Tensorflow。![](img/a16e1b74716826f74e6f5876073581a1_13.png)
- en: '![](img/a16e1b74716826f74e6f5876073581a1_14.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_14.png)'
- en: Now as of the recording of this video， we're right around the Tensorflow 2。0
    to 2。2 version。 The platforms that we're dealing with in this course are Google
    Coab 2。2 Windows 2。1 Linux 2。2 and Mac 2。0 General， I found that Mac is the most
    behind as far as what Conda has released for Tensorflowlow versions。 and Linux
    Linux and Google Coab stay practically neck and neck are the more current ones。Now。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在录制这个视频时，我们正好处于 Tensorflow 2.0 到 2.2 版本之间。我们在本课程中处理的平台是 Google Coab 2.2，Windows
    2.1，Linux 2.2 和 Mac 2.0。一般来说，我发现 Mac 在 Conda 发布的 Tensorflow 版本中落后最多。而 Linux 和
    Google Coab 基本上是更当前的版本，现在几乎齐头并进。
- en: if you're using Windows 10， you can actually install a Linux subsystem in your
    Windows environment and actually install the couta drivers to go in conjunction
    with that。 I'm going to do a separate video on that。 If you're a relatively advanced
    installation。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows 10，实际上可以在 Windows 环境中安装 Linux 子系统，并安装相应的 couta 驱动程序。我会单独制作一个关于这个的教程。如果你是相对高级的安装用户。
- en: not afraid of the command prompt user。 you may want to do that。 I think that
    is sort of the best environment in Windows， but I will soon have a video on that。
    and I'll link it in the description。But we're doing Windows。 So as of the writing
    of this。 Windows is 2。1 of Tensorflow that Conda supports。 Now you can use CPU
    only or GP and CPU GPU is great if it just magically works if it doesn't magically
    work。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 不害怕命令提示符的用户，你可能会想这样做。我认为这在 Windows 中是最好的环境，但我很快会制作一个关于这个的视频，并在描述中链接它。但是我们正在做
    Windows。所以在写这段话时，Windows 支持 Tensorflow 的版本是 2.1。现在你可以选择仅使用 CPU，或者使用 GPU 和 CPU，如果它能神奇地工作的话，GPU
    是很棒的，如果它不能神奇地工作。
- en: You've more got to install the drivers and everything and get couda and co DN
    and all these various things working cross your fingers and hope that this works
    if you are doing it for GPU。 If not， I have another more handson video showing
    how to literally install all the drivers。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要安装驱动程序以及其他所有东西，安装 couda 和 co DN，确保这些各种东西都能正常工作，交叉你的手指，希望这能在你使用 GPU 时正常工作。如果不行，我有另一个更实用的视频，展示如何实际安装所有驱动程序。
- en: that might be an option， but I will be honest with you installing all the GPU
    drivers can be a headache。 and there's various other options for using the GPU
    like Docker images。 I'll probably do videos on those in the future。 I do have
    a GPU on this machine， I have a Titan RtX。 So I am going to go ahead and use this
    command， but if。W to install this just for CPU。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是一个选项，但老实说，安装所有的 GPU 驱动程序可能会让人感到头疼。而且还有其他使用 GPU 的选项，比如 Docker 镜像。我可能会在未来制作关于这些的教程。我在这台机器上有一个
    GPU，我有一个 Titan RtX。所以我将继续使用这个命令，但如果只是为 CPU 安装这个。
- en: use this command。 If you want to be really fancy， set up two environments。 And
    that's what I actually have on my work machine 1 for CPU 1 for GP。 And then you
    can switch between them。 So I'm just gonna paste that in there。 by the way。 quick
    way to paste is just right click。 Make sure you're in your Tensorflow environment
    and run it。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个命令。如果你想更高端，可以设置两个环境。这就是我在工作机器上所做的，一个用于CPU，一个用于GPU。然后你可以在它们之间切换。所以我就将其粘贴在这里。顺便说一下，快速粘贴的方法是右键点击。确保你在TensorFlow环境中并运行它。
- en: potentially if things are going to go wrong。 This is this is a good place for
    them。 maybe to go wrong。 So if you do get an error here， go ahead， copy， paste
    it and Google it。 You'll probably find something on stack overflow And hopefully
    that will guide you。 You can always post it to the comments here。 and maybe somebody
    will have an idea。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事情出错，这里是一个潜在的好地方。所以如果你在这里遇到错误，可以复制、粘贴并在谷歌上搜索。你可能会在Stack Overflow上找到一些解决方案，希望这能指导你。你也可以在这里留言，也许有人会给出建议。
- en: I'm going go ahead and say run。😊。![](img/a16e1b74716826f74e6f5876073581a1_16.png)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我将继续运行。😊。![](img/a16e1b74716826f74e6f5876073581a1_16.png)
- en: '![](img/a16e1b74716826f74e6f5876073581a1_17.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_17.png)'
- en: I haven't seen everything that can possibly go wrong， so I may or may not be
    able to help you。 but if it's something I've seen， I will post a reply in the
    comments and also look in the comments。 see if anybody has had the same issue
    as you and got a response from somebody possibly me。 We're going fast forward
    this。 This takes a little while。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能没有见过所有可能出错的情况，所以我可能能帮你，也可能不能。但如果是我见过的事情，我会在评论中回复你，同时看看有没有其他人遇到同样的问题，并得到可能是我的回复。我们快进这一部分。这需要一点时间。
- en: '![](img/a16e1b74716826f74e6f5876073581a1_19.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_19.png)'
- en: All right， no errors。 So that's good。 Now， the next thing we're going to do。
    we're going to install some additional libraries that my class needs， but these
    are all very common。 I I suggest maybe using this as a starting point。 They're
    located in this tools do Yaml file。 and that is inside of that zip file that we
    downloaded earlier。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，没有错误。这很好。接下来我们要做的是安装一些我的课程所需的附加库，这些库都很常见。我建议把这个作为起点。它们位于这个工具的YAML文件中，文件在我们之前下载的压缩包里。
- en: or you can just download that file directly if you don't want to download everything。
    And you can see it right there。I am going to basically copy this command。So。 and
    then paste it into here。 again， make sure you're still in your tensorflow directory。
    If you've closed your dos prompt and reopened it， then you might not be there。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以直接下载那个文件，如果你不想下载所有内容。你可以看到它在那里。我将基本上复制这个命令。所以，然后将其粘贴到这里。再一次，确保你仍在你的TensorFlow目录中。如果你关闭了命令提示符并重新打开，可能就不在那了。
- en: So we'll go and run this。 This takes it a little while to install these。 This
    is installing things like psyit learn and other other things that we need for
    the class。 I'll go ahead and fast forward through this。 Okay， and we're done。
    You don't need to reactivate it。 just ignore what it sent there。 so long as you're
    still in Tensorflow or whatever you named it。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们来运行这个。这需要一点时间来安装。这是在安装像`scikit-learn`等我们课堂需要的东西。我会快进这一部分。好的，我们完成了。你不需要重新激活它。只需忽略它发送的内容，只要你仍在TensorFlow或你命名的环境中就可以。
- en: you are fine。 Now， this is a very important command here。 If you don't do this。
    you won't see your new environment in Jupiter， and you won't be able to use it。
    So we're going to run this command here。 Now， if you run this command。 and you
    get an error like it can't find the Iy and kernel。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你没问题。现在，这里有一个非常重要的命令。如果你不这样做，你将在Jupyter中看不到你的新环境，也无法使用它。所以我们将运行这个命令。如果你运行这个命令时遇到错误，比如找不到`ipy`和`kernel`。
- en: That means that you forgot probably to run this conda install and beconnda。
    I get that question from time to time。 So just so you're aware of that。 gonna
    paste that into there。 This happens quick。 So it's done。嗯。Now， what we're going
    to do is we're going to run Jupiter notebook。 Now， on Windows， it is very， very
    important that you start your Jupiter notebook in the environment that you're
    planning on using。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你可能忘记运行这个`conda install`命令。我时常会收到这个问题。所以你要知道这一点。将其粘贴到这里。这发生得很快，所以完成了。嗯。现在，我们要运行Jupyter
    Notebook。在Windows上，重要的是要在你计划使用的环境中启动Jupyter Notebook。
- en: It's a little silly that in Jupiter notebook， you can pick between all these
    environments。 but you have to have started in that one。 So it's， it's almost redundant
    on Windows。 But nonetheless， this is how Windows works。 There is a github issue
    open about it。 So maybe they'll fix it at some point。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jupyter Notebook中选择这些环境有点愚蠢，但你必须先在那个环境中启动。因此，这在Windows上几乎是多余的。不过，这就是Windows的工作方式。关于此问题有一个GitHub问题正在开放中，也许他们会在某个时候修复它。
- en: '![](img/a16e1b74716826f74e6f5876073581a1_21.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_21.png)'
- en: Then I'm going to run Jupiter。Notebook。By the way， if you try to run this from
    outside of Tensorflow。 don't you don't do the Conda activate Tensorflow， you'll
    get a DLL error。 I'll demonstrate that actually， since it is a very common error
    that that people get。 So I'm going to run Jupipyter notebook。 It's going launch
    a web browser。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我要运行Jupyter Notebook。顺便说一句，如果你尝试从Tensorflow外部运行这个，不要进行Conda激活Tensorflow，你会遇到DLL错误。我将演示这一点，因为这是一个人们常见的错误。所以我将运行Jupyter
    Notebook，它将启动一个网页浏览器。
- en: and I'm going to go ahead and open up Class1 overview。 Now in you do need to
    select I called it Tensorflowlow here， if you called it something else。 you need
    to doda kernel change kernel and pick the one that you that you have。 which is
    which is right here。So we'll go ahead and actually。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我将继续打开Class1概述。现在，如果你需要选择，我在这里称之为Tensorflowlow，如果你叫了别的名字，你需要更改内核并选择你有的那个，正是这个。我们将继续进行。
- en: it looks like my instructions named this 3。6。 even though we are using 3。7。
    So I'll update that。 that's just a label。 It does not matter。 But I'll do kernel
    restart and run all And it's gonna run this part here。 which is critical that
    tells you the version that you're running of everything。 So Python 377。 So yeah，
    I need to update my label there， which is easy enough。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我的指令将其命名为3.6，尽管我们正在使用3.7。所以我会更新这个，那只是一个标签，没关系。但我将进行内核重启并运行所有内容，它将运行这一部分，这很关键，它告诉你你正在运行的所有版本。因此Python
    377。是的，我需要在这里更新我的标签，这很简单。
- en: And then the key here is the Tensorflow version as of this video， 2。1 is the
    latest that you can get on Windows unless you literally install everything kind
    of from scratch without kind of helping you。 which is which is not horrible， but
    it's doable。 notice GPU is available。 So I've successfully installed this for
    GP。 if you installed it for a CPU。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的关键是截至本视频，Tensorflow版本2.1是你在Windows上能获得的最新版本，除非你从头开始安装所有内容，这样做并不糟糕，但可行。注意GPU是可用的。所以我已经成功为GPU安装了这个，如果你是为CPU安装的。
- en: it'll say GP is not available。 So this this is how you get this up and running
    for GP or not for CPU。 Now let me show you a very。![](img/a16e1b74716826f74e6f5876073581a1_23.png)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 它会显示GPU不可用。这就是你如何让它为GPU或不为CPU正常运行。现在让我给你展示一个非常。![](img/a16e1b74716826f74e6f5876073581a1_23.png)
- en: Common error。 Hopefully you're not getting this error。 but I just want to show
    you some of the most common things that can go wrong。 Now。 if nothing's going
    wrong， you're done， please subscribe and hope this was helpful for you。 Now。 if
    you're if you're getting other errors， here's one of the most common ones。I'll
    do Conda。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 常见错误。希望你没有遇到这个错误，但我想给你展示一些最常见的问题。现在，如果没有任何问题，你就完成了，请订阅并希望这对你有帮助。现在，如果你遇到其他错误，这里是最常见的一个。我将进行Conda。
- en: '![](img/a16e1b74716826f74e6f5876073581a1_25.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a16e1b74716826f74e6f5876073581a1_25.png)'
- en: Completely like you're just starting up， believe me， I make this mistake all
    the time。 and I go into the course files and I don't do a con to activate。 I just
    go Jupiter notebook。Now。 in Mac and Linux， this will， this is fine。 There's no
    issue here。 But in Windows。 this will cause an issue。 So I'm going to go into
    class 1 overview， just like I did before。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 完全就像你刚开始一样，相信我，我总是犯这个错误。我进入课程文件但没有进行Conda激活。我只是去Jupyter Notebook。现在，在Mac和Linux中，这是没问题的，但在Windows中，这会造成问题。所以我将进入Class
    1概述，就像我之前做的那样。
- en: And I'm going to do kernel， restart and run all and notice the error that I
    get here。 By the way。 this is the error that you would probably want to copy and
    paste and Google on。 But DLL load error。![](img/a16e1b74716826f74e6f5876073581a1_27.png)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我将进行内核重启并运行所有内容，同时注意我在这里遇到的错误。顺便提一下，这是你可能想要复制粘贴并在谷歌上搜索的错误。但这是DLL加载错误。![](img/a16e1b74716826f74e6f5876073581a1_27.png)
- en: It just means you did not activate your environment prior to running this。 So，
    just be aware of that。![](img/a16e1b74716826f74e6f5876073581a1_29.png)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是意味着你在运行之前没有激活你的环境。所以，请注意这一点。![](img/a16e1b74716826f74e6f5876073581a1_29.png)
- en: Thank you for watching this video。 Now this seems like a hairy process that
    maybe you've tried and didn't work that well。Feel free to use Google coab for
    the class assignments and examples。 It really works quite well。 I test everything
    with Google coabab。 So you should be fine。 If you find this kind of thing interesting，
    please subscribe to my YouTube channel or give me a like if this video helped
    you out。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢观看这个视频。现在，这似乎是一个复杂的过程，也许你尝试过但效果不佳。欢迎使用 Google Colab 来完成课堂作业和示例。这真的效果很好。我用
    Google Colab 测试所有内容。所以你应该没问题。如果你觉得这种内容有趣，请订阅我的 YouTube 频道，或者如果这个视频对你有帮助，请给我点赞。
- en: Thank you very much。😊。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢。😊。
