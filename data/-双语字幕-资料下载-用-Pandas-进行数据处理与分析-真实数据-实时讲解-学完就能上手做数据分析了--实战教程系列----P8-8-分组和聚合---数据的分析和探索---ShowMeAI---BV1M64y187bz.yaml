- en: 【双语字幕+资料下载】用 Pandas 进行数据处理与分析！真实数据&实时讲解，学完就能上手做数据分析了！＜实战教程系列＞ - P8：8）分组和聚合 -
    数据的分析和探索 - ShowMeAI - BV1M64y187bz
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 【双语字幕+资料下载】用 Pandas 进行数据处理与分析！真实数据&实时讲解，学完就能上手做数据分析了！＜实战教程系列＞ - P8：8）分组和聚合 -
    数据的分析和探索 - ShowMeAI - BV1M64y187bz
- en: Hey there。 How's it going， everybody。 In this video。 we're gonna be learning
    how we can group and aggregate our data。 Now。 if you don't know what grouping
    and aggregating really entails。 then I'd really recommend sticking around for
    this video。 because basically。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好，最近怎么样？在这个视频中，我们将学习如何对数据进行分组和聚合。如果你不知道分组和聚合到底是什么，建议你继续观看这个视频，因为基本上。
- en: this is what most people think of when they think of actually analyzing data
    in a meaningful sense。 So this will be the first video where we actually get some
    statistics back on our data sets and aren't just modifying our data frames in
    different ways。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是大多数人想到有意义地分析数据时的想法。因此，这将是我们第一次从数据集获取一些统计数据，而不仅仅是以不同的方式修改数据框。
- en: So， for example， maybe you want to know what the average salary for a developer
    is。 Or maybe you want to know how many people from each country knows Python or
    another programming language。 So what we're going learn here is going to allow
    us to answer those types of questions。 Now。 I would like to mention that we do
    have a sponsor for this series of videos and that is brilliant。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，也许你想知道开发者的平均薪资是多少。或者你想知道每个国家有多少人会Python或其他编程语言。我们将在这里学习的内容将帮助我们回答这些类型的问题。现在，我想提到我们这一系列视频有一个赞助商，那就是Brilliant。
- en: So I really want to think brilliant for sponsoring this series。 And it would
    be great if you all could check them out using the link in the description section
    below and support the sponsors。 And I'll talk more about their services in just
    a bit。 So with that said。 let's go ahead and get started。 Okay， so before we start
    doing some more advanced data analysis。😊。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的想感谢Brilliant赞助这一系列。如果大家能通过下面描述部分的链接查看他们并支持赞助商，那将非常棒。我稍后会更多地谈谈他们的服务。那么，既然这样，我们就开始吧。在开始进行一些更高级的数据分析之前。😊
- en: Start off slow and build up to the more advanced stuff so that all of this makes
    sense along the way。 So I have my developer survey data open here that we've been
    using throughout this series。 And as usual， if you'd like to follow along， then
    I have links to this code and the data in the description section below。 So let's
    look at some basic aggregations。 So if you don't know what aggregation means，
    basically。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将慢慢开始，然后逐步进入更高级的内容，以确保这一切都是有意义的。我这里打开了我们在整个系列中使用的开发者调查数据。如往常一样，如果你想跟着做，我在下面的描述部分中提供了代码和数据的链接。让我们看看一些基本的聚合。如果你不知道聚合的意思，基本上。
- en: it means that we're going to be combining multiple pieces of data into a single
    results。 So。 for example， if you've ever used a mean median or mode and mathematics。
    these are aggregate functions， because they take multiple values and give you
    either the mean median or mode of those results。 So if we wanted to run some analysis
    on our developer survey here。 one question we might ask is。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们将把多个数据片段合并为一个结果。例如，如果你曾经在数学中使用过平均数、中位数或众数，这些都是聚合函数，因为它们取多个值并给出这些结果的平均数、中位数或众数。因此，如果我们想对这次开发者调查进行一些分析，我们可能会问的问题是。
- en: okay， what is a typical salary for developers who answered this survey。 So that
    might be some good information to have if you're looking for a job and want to
    get an idea of what the salaries look like at the moment。 So to do this， we can
    grab the。Meedn salaries of our data frame。 So first。 let's look at these salaries。
    So our salary column within this data frame here of all these survey results is
    called converted comp。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，回答这个调查的开发者的典型薪资是多少？如果你正在找工作并想了解目前的薪资情况，这可能是一些很好的信息。因此，为此，我们可以获取数据框中的平均薪资。首先，让我们看看这些薪资。在这个数据框中的薪资列叫做转换薪资。
- en: And that is converted to US dollars。 it's actually further over here in the
    survey。 It is about right here。 So I'm going to copy that。 Now， first， let's just
    look at this column。 So as we've seen before， we can just access the column just
    like we're accessing a key of a dictionary。 And I'm going grab the first， let's
    get the first 15 salaries or so。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这转换为美元。实际上在调查中还有进一步的信息。就在这里。所以我会复制它。首先，让我们看看这一列。正如我们之前看到的，我们可以像访问字典的键一样访问这一列。我将抓取前15个薪资。
- en: So I'm going to look at the head of the of the results here。 And these are salaries
    here。 that developers put down for this survey。 and these N N values here。 just
    mean not a number in this context。 It means that they just skipped that question
    in the survey。 Okay， so we can see the median salary for this survey。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我将查看结果的前几行。这些是开发人员在这次调查中填写的工资，而这些N N值在这个上下文中意味着非数字，表示他们在调查中跳过了那个问题。好的，所以我们可以看到这次调查的中位数工资。
- en: Just by running the median method on this series。 So to do this。 I'm going to
    go ahead and copy what I have here。 And now， instead of looking at the head。 I
    can just run median on that series。 So if I run this。 Then we can see that the
    median salary for this survey was around 57000。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 只需在这个序列上运行中位数方法。因此，接下来我将复制我在这里的内容。现在，不再查看头部，我可以直接在那个序列上运行中位数。所以如果我运行这个，我们可以看到这次调查的中位数工资大约为57000。
- en: So that takes all of the salary responses from our survey from this series here。
    And it gives us the median value of all of those and ignores the N in values。
    So。 this probably doesn't give us as much information as we'd really like to have。
    So， for example。 different countries pay different amounts since there are different
    costs of living and things like that。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这取自我们调查中这个序列的所有工资响应。它给我们提供了所有这些的中位数值，并忽略了N N值。因此，这可能没有提供我们真正想要的信息。例如，不同国家的薪资不同，因为生活成本和其他因素各不相同。
- en: So it' would be nice if we could look at the median salary broken down by country。
    And we'll look at that here in a second when we learn about grouping data。 So
    first。 I want to cover a few more basic concepts before we move on to grouping。
    So one thing that I'd like to look at is running these aggregate functions on
    our entire data frame。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们能查看按国家划分的中位数工资就好了。当我们学习分组数据时，我们将稍后查看这一点。所以首先，我想在继续分组之前再讲几个基本概念。我想查看的是对整个数据框运行这些聚合函数。
- en: 😊，So let's see what we get if we just run this median function that we just
    ran on our entire data frame instead of just this single series。 So here I'm just
    going to say Df do median。 So we're no longer accessing just a single column。
    So if I run this， then it might take a second to spin up here。 So when I do this。
    it's going to look through our data frame and find the columns that contain numerical
    values where it can grab a median value and some of these might not make sense
    to use with the median but others might be pretty useful to us。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 😊，让我们看看如果对整个数据框运行我们刚才运行的中位数函数会得到什么。所以这里我只是说Df do median。我们不再仅仅访问单一列。如果我运行这个，可能需要一点时间来加载。当我这样做时，它会查找我们的数据框，并找到包含数值的列，以便可以获取中位数值，其中一些可能不适合用中位数，但其他的可能对我们很有用。
- en: So for example， we can see that the median age down here at the bottom for this
    survey was 29 years old。 and the median number of work hours per week。 that was
    40， which is pretty standard。 So that makes sense。 Now， if you want to get a broad
    overview of your data and a statistical overview。 we can use the describe method
    on our data frame instead。 So if I。Instead run， describe。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以看到这次调查的中位数年龄在底部为29岁，而每周的中位工作小时数为40小时，这很标准。所以这很合理。现在，如果你想对你的数据进行广泛的统计概述，我们可以使用describe方法，而不是对我们的数据框运行。于是，我如果改为运行describe。
- en: instead of median。 And I run this。 then this is going to give us a broad overview
    of some different stats。 So if we look at the converted comp column here， then
    we can see a few different stats about this column。 So it gives us the count。
    It gives us the mean， it gives us the standard deviation， the minimum。 and then
    it also gives us the 25，50 and 75% quantiles here。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是中位数。我运行这个，这将为我们提供一些不同统计数据的概述。所以如果我们查看这里转换的补偿列，我们可以看到一些关于这一列的不同统计数据。它给我们提供了计数、均值、标准差、最小值，以及25%、50%和75%分位数。
- en: Now this 50% marker is just the median value， by the way。 And just like we saw
    before。 when we look this median value up specifically， this is around 57000。
    Now this is in scientific notation here。 So it looks a little bit different。 Basically。
    this means that we just need to move 4 spots over from the decimal point。 So 1，2，3，4。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这个50%的标记只是中位数值。就像我们之前看到的，当我们具体查找这个中位数值时，大约是57000。这里是科学记数法，所以看起来有点不同。基本上，这意味着我们只需从小数点向右移动4个位置。所以1、2、3、4。
- en: So that would be 57000 there。 So this describe method gives us a bunch of these
    aggregates in one place。 If we just want to get a quick overview of our date。Now。
    if you're wondering why I wanted to look at the median of our salaries instead
    of the mean。 which is the average， basically it's because the mean is affected
    too heavily by outliers。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这里会是57000。因此，这个描述方法会在一个地方给我们提供一堆聚合数据。如果我们只想快速浏览我们的数据。现在，如果你在想，为什么我想查看薪资的中位数而不是平均数，其实是因为平均数会受到异常值的影响太大。
- en: It's not really a good metric to use because a few outliers can affect the average
    very heavily we can see that the mean salary up here。 if I highlight this right
    here。 if we were to count this up。 then that's actually about 127000 on average，
    but that gives us an unrealistic expectation of what a typical developer salary
    is。 because the largest salaries on our data set are just pulling up that average
    so heavily。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是一个好的指标，因为少数异常值可以极大地影响平均数。我们可以看到上面的平均薪资，如果我强调这一点。如果我们要计算这个，那么实际上大约是127000的平均值，但这给我们一个不切实际的期望，关于典型开发者的薪资，因为数据集中的最高薪资将平均值拉得太高。
- en: So in cases like that， you definitely want to use the mean instead I think that's
    a better representation or I'm sorry you're going to want to use the median instead
    because that's a better representation。 Now if we only wanted to get this overview
    for a single column then we could just run this describe method on a single column
    as well and get those results for that。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在这种情况下，你肯定想使用中位数，我认为那是更好的表示，抱歉，你会想使用中位数，因为那是更好的表示。现在，如果我们只想获得单列的概述，我们也可以在单列上运行这个描述方法，并得到相应的结果。
- en: Now， you might be wondering what that count value is listed at the top of these
    described results。 Now， the count value is the number of non in a rows。 which
    basically means that it counts the non missing rows。 So in the context of this
    survey。 a missing row just means that the respondent didn't answer that a specific
    question。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能在想，这些描述结果顶部列出的计数值是什么。计数值是非缺失行的数量，这基本上意味着它计算了非缺失行。因此，在这次调查的上下文中，缺失行仅意味着受访者没有回答特定问题。
- en: So if I look at the count for the converted comp column。 So I'm going to go
    up here。And grab this。 And instead of grabbing the median。I'm just going grab
    the count。 We can see here that only about 55 to 65 or 55 to 56000 people answered
    that question。 Now。 I think there are about 89000 rows for this data， So that
    means that there are about 30000 people or so who didn't answer the salary question
    on this survey。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我查看转换的comp列的计数。我将会上去抓取这个。而不是抓取中位数，我只是要抓取计数。我们可以看到，只有大约55000到65000人回答了这个问题。现在，我想这个数据大约有89000行，这意味着大约有30000人没有回答这次调查的薪资问题。
- en: Now， I sometimes see the mistake that some people think that the count function
    will count up the individual values and a specific row and report how many of
    those values were in the column。 But if that's what you're trying to do。 then
    that's what we would use the value counts function for。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我有时会看到一些人犯错，他们认为计数函数会计算特定行中的个别值，并报告这些值在列中有多少个。但是如果这就是你想做的，那么我们应该使用值计数函数。
- en: Now， in case that doesn't quite make sense。 let's look at an example， to see
    what this looks like。 So， for example， we had the question on the survey that
    asked each person whether they coded in their free time as a hobby。 So to see
    all of these responses for that question。 we can look at the hobbyist column。
    So I'll just access。That hobbyist column here and run that。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果这听起来有点不太明白。我们来看一个例子，看看这是什么样子的。例如，我们在调查中有一个问题，问每个人是否在空闲时间把编码当作爱好。为了查看这个问题的所有回答，我们可以查看爱好者列。所以我会访问这个爱好者列并运行它。
- en: And we can see that we get a series returned here。 And these are just a bunch
    of yes or no questions。 So it was just a yes or no question that each person answered。
    So you might get the survey results back and you might think to yourself， okay，
    well。 I can see the responses here in the survey， But I just want to know how
    many people answered。 yes and how many people answered， no， So how would we do
    that。 well。 we can get that information with the value counts function。 So if
    I just look at the value counts。 and that is value underscore counts。 if we run
    that method on that series then that is going to give us a breakdown of how many
    people answered。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到这里返回了一系列数据。这些只是一些是或否的问题。每个人都回答了一个是或否的问题。因此，当你可能收到调查结果时，你可能会想，好吧，我可以在调查中看到响应，但我只想知道有多少人回答了是，有多少人回答了不。那么我们该如何做到呢？我们可以通过值计数函数获得这些信息。所以如果我只看值计数，那就是value
    underscore counts。如果我们对那个系列运行这个方法，那么这将给我们一个回答人数的细分。
- en: yes， and how many people answered， no as the whether or not they code as a hobby。
    So I use the value counts all the time when exploring data。 And we can find out
    some interesting things from our survey by using this on some different fields。
    So， for example， there is a question on this survey。😊。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，还有多少人回答了不，是否将编码作为一种爱好。因此，我在探索数据时总是使用值计数。通过对一些不同的字段使用这个，我们可以从我们的调查中发现一些有趣的事情。例如，这个调查中有一个问题。😊。
- en: That ask each person what social media platform they use the most。 So if you're
    building an app or a website and want to keep track of the most popular social
    media sites。 then you might be interested in what the most popular answers to
    that question so to view these results we can access the social media column of
    the survey。 So let me do that。 And before I run value counts on this。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 询问每个人最常使用哪个社交媒体平台。因此，如果你在构建一个应用程序或网站并想跟踪最受欢迎的社交媒体网站，那么你可能会对这个问题的最受欢迎答案感兴趣。为了查看这些结果，我们可以访问调查的社交媒体列。所以让我这样做。在我对这个运行值计数之前。
- en: let me just show you what this column looks like。 So this column was called
    social media So I'm going run this。 and we can see that respondent number one
    said that they used Twitter more than any other social media。 this person used
    Instagram， Reddit， Reddit， Facebook， YouTube and so on。 Now I've pointed this
    out in previous video so far。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我给你展示一下这个列是什么样的。因此，这一列叫做社交媒体，所以我将运行这个。我们可以看到，受访者编号一说他们使用Twitter比其他任何社交媒体更多，这个人还使用了Instagram、Reddit、Facebook、YouTube等等。到目前为止，我在之前的视频中提到过这一点。
- en: But if you've forgotten or if this is your first video that you've watched in
    this series then at the top of my notebook here。 I've also loaded in a schema
    data frame right here and this。Data frame tells us the exact question that was
    asked on the survey for each of these column names。 So， for example， if we want
    to see the exact question that was asked for this social media column。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你忘了，或者这是你第一次观看这个系列的视频，那么在我的笔记本顶部，我也在这里加载了一个模式数据框。这个数据框告诉我们每个列名在调查中提出的确切问题。例如，如果我们想看到这个社交媒体列所提问的确切问题。
- en: then I can just access that schema data frame and do a dot Lo because the indexes
    are going to be the column names And then we can just search for social media
    and if I run that。 then we can see that the question that they asked on the survey
    specifically was what social media site do you use the most so we can see that
    we get a few different responses here But which of these are the most popular
    So to find that out。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我可以直接访问那个模式数据框并进行点选择，因为索引将是列名。然后我们可以搜索社交媒体，如果我运行这个，我们可以看到调查中他们具体问的问题是你最常使用哪个社交媒体网站，因此我们可以看到这里有几个不同的回答，但这些中哪个是最受欢迎的呢？所以要找出这个。
- en: let's look at the value counts of this series to see what the most popular social
    media sites are overall for these developers So I'm going to run this and then
    I'm going to run that value counts function here。 And now we can see here at the
    top that Reddit was the most popular with about 14000 people and then we have。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个系列的值计数，以了解这些开发者的总体最受欢迎社交媒体网站是什么。因此，我将运行这个，然后在这里运行值计数函数。现在我们可以看到，Reddit在顶部是最受欢迎的，大约有14000人，然后我们有。
- en: YouTube， Whatsapp， Facebook， Twitter， Instagram， I don't use social media was
    one of the answers。 Now we also have some foreign social networks here。 So I've
    never heard of these。 but I believe these are Chinese characters So this is probably
    a Chinese social media site I don't know really Russian writing。 but I would assume
    that this is Russian writing here。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: YouTube、Whatsapp、Facebook、Twitter、Instagram，我不使用社交媒体是其中一个答案。我们还有一些外国社交网络在这里。我从未听说过这些，但我相信这些是中文字符。所以这可能是一个中国社交媒体网站。我对俄文不太了解，但我猜这可能是俄文。
- en: So this is probably a Russian social media site。 So it's kind of interesting
    seeing all of these different answers from around the world。 Now one more quick
    tip if we want to see these broken down by percentage instead of raw numbers。
    then we can pass in the normalized argument to the value counts function and set
    that equal to true。 So let me show you what this looks like。 So I can say normalizedize
    equals true。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是一个俄罗斯社交媒体网站。看到来自世界各地的这些不同答案真有趣。还有一个小提示，如果我们想看到按百分比划分的结果，而不是原始数字，我们可以将归一化参数传递给值计数函数，并将其设置为true。让我给你展示这是什么样子。所以我可以说normalizedize等于true。
- en: And now we're gonna get these broken down by percentage So 17% of the people
    so that they use Reddit 16 said YouTube。About 16 said Whatsapp and so on。 Okay，
    so we can see that we have some social media sites here from some other countries。
    So obviously， this is most likely a regional thing。 My guess would be that the
    popularity of the social media platforms。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将按百分比进行划分。所以17%的人说他们使用Reddit，16%说YouTube，约16%说Whatsapp，等等。好的，所以我们可以看到这里有一些来自其他国家的社交媒体网站。这显然可能是地区性的问题。我猜社交媒体平台的受欢迎程度。
- en: varies a lot based on what country you're in。 So how would we break up these
    results so that we can see the most popular social media sites for each country。
    Now， in order to do this， we're going to have to learn about grouping our data。
    So again。 this is a topic that can be a little confusing when you first see it。
    So let me start off slow so that we can see exactly what's going on here。 So first
    of all。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这因国家而异。那么我们如何拆分这些结果，以便看到每个国家最受欢迎的社交媒体网站呢？为此，我们需要学习如何对数据进行分组。所以这又是一个初看可能会让人困惑的话题。让我慢慢开始，以便我们确切了解这里发生了什么。首先。
- en: if we want to see specific results based on the country or based on some other
    column。 then we're going to have to group on that specific column。 And we have
    the group by function for this。 So what actually does it mean to say that we're
    going to use the group by function。 So in the pandas documentation， it says that
    a group by operation involves some combination。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想看到基于国家或其他某一列的特定结果，那么我们需要在那个特定列上进行分组。我们有用于此的group by函数。那么，使用group by函数实际上意味着什么呢？在pandas文档中，它说分组操作涉及某种组合。
- en: Of splitting the object， applying a function and combining the results。 So I'm
    going to try to walk through each of those processes one at a time so that we
    can see exactly how this works。 So again， in the pandas documentation， it says
    that a group by operation involves some combination of splitting up our object
    applying a function and then combining those results。 So let's do each of those。
    Now， first， just for a reference。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 拆分对象、应用函数和组合结果。所以我将尝试逐一讲解每个过程，以便我们确切了解这是如何工作的。所以在pandas文档中，它说分组操作涉及某种组合，拆分对象、应用函数，然后组合这些结果。让我们逐一进行。首先，作为参考。
- en: let's display the value counts for each country so that we can see the countries
    that have the most results for this particular survey so to do this we can just
    access the country column。 And if I run this， we can see that this gives us the
    country that each respondent said that they were from。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们显示每个国家的值计数，以便看到在这次特定调查中结果最多的国家。为此，我们只需访问国家列。如果我运行这个，我们可以看到每个受访者所说的国家。
- en: And if we look at the value counts for this。 then this is going to tally up
    all of the unique responses so we can see that the majority of this survey was
    answered by developers in the United States。And in second was India， then Germany，
    United Kingdom， Canada and so on。 Okay。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看这个的值计数，这将汇总所有独特的响应，因此我们可以看到大多数调查是由美国的开发人员回答的。其次是印度，然后是德国、英国、加拿大等。好的。
- en: so now let's look at how to use the group by function on our country column。
    So first。 we're going to split the object。 and then we're going to apply a function。
    And then it will combine those results。 So first， let's look at splitting the
    object。 Now。 in this case， we want to group all of the results by country。 So
    to do this。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何在我们的国家列上使用分组函数。所以首先，我们将拆分对象，然后应用一个函数。然后它将组合这些结果。所以首先，让我们看看拆分对象。在这种情况下，我们想按国家分组所有结果。所以为此。
- en: we can simply say D F dot group by。 And then we will pass in。 This is going
    to be a list of columns that we want to group1。 And I'm just going to pass in
    a single column here for country。 So if I run this。 then what we get back here
    is this data frame group by object。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以简单地说`DF.group_by`。然后我们将传入。这将是我们想要分组的列的列表。我将只传入一个列，这里是国家。如果我运行这个，那么我们返回的是这个数据框的分组对象。
- en: So what is this object and what exactly can we do with this。 So first。 let's
    explain a bit what this is。 So this object contains a bunch of groups and better
    understand what this is。Let's take a look at an individual group that this beta
    frame has。 Now， before we do that。 I'm going to set this as a variable so that
    we can reuse this and not have to retype our code over and over and also it'll
    be easier to read。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这个对象是什么，我们到底可以对其做什么？所以首先，让我们稍微解释一下这是什么。这个对象包含一堆组。为了更好地理解这是什么，让我们看一下这个数据框的一个单独组。在我们这样做之前，我将把它设置为一个变量，以便我们可以重用它，而不必反复输入代码，同时它也更容易阅读。
- en: So I'm going to call this country group and I'm just going to set this equal
    to this Df do group by and now instead of typing this every time we can just reference
    this country group variable here。 So now let's take a look at one of these groups。
    So since we grouped our rows by country then we can grab a specific group by country
    name。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我将这个称为国家组，我将其设置为这个`DF.do_group_by`，现在不必每次都输入这个，我们可以只引用这个国家组变量。那么现在让我们看看这些组中的一个。由于我们按国家分组了我们的行，所以我们可以通过国家名称抓取特定组。
- en: So I'll grab the group for the United States。 so to do this we can say country
    group do git underscore group and then pass in the name of the group in this case
    I'm want to get the group for United States。 So if I run this cell whoops and
    this is telling me that country group is not defined。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我会获取美国的组。为此，我们可以说国家组做`git_group`，然后传入组的名称，在这种情况下，我想获取美国的组。如果我运行这个单元，哎，这告诉我国家组没有定义。
- en: And it's because I didn't rerun this cell up here after I set that variable。
    So if I run this and grab the group for the United States。 then we can see that
    we get a data frame returned here with some survey results。 So this doesn't look
    like anything special yet。 But if I look at the country name for each of these
    survey results。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我在设置变量后没有重新运行上面的这个单元。所以如果我运行这个并获取美国的组，然后我们可以看到这里返回了一个包含一些调查结果的数据框。所以这看起来似乎没什么特别的。但是如果我查看每个调查结果的国家名称。
- en: the country is listed right here。 then we can see that all of these responses
    are from people who said that they were from the United States。 And if I look
    at the group for India。 So if I instead change United States to India here and
    grab that group。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 国家就在这里列出。那么我们可以看到所有这些回应都是来自声称他们来自美国的人。如果我查看印度的组。如果我把美国换成印度并获取那个组。
- en: If we look at the country here。 then these are all the survey results for people
    who said that they were from India。 So that's what our data frame group by object
    that we saw before consists of。 it has broken up all of the different responses
    into groups by country name。 So this would be similar to running a filter on our
    original data frame。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看这里的国家，那么这些都是声称他们来自印度的人的调查结果。所以这就是我们之前看到的数据框分组对象的组成。它已将所有不同的回应按国家名称分成了组。因此这类似于在我们的原始数据框上运行过滤器。
- en: So I should be able to get these same。ultFor a single country。 just by doing
    what we've seen in previous videos and creating a filter。 So I could say， okay。
    I want to grab。I want our filter to be equal to anytime the country is equal to
    the。United States。 and then I can apply this to our data frame by saying， okay。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我应该能够获得这些相同的结果，对于单个国家，只需按照我们在之前视频中看到的做并创建一个过滤器。所以我可以说，好的。我想抓取。我希望我们的过滤器等于国家等于美国时。然后我可以通过说，好的，将其应用于我们的数据框。
- en: Df do Lo and give me all the results that match that filter。 And if I run this
    cell。 then we can see over here in the country column that all of these results
    are respondents from the United States。 So if we're just looking to get information
    on a single country。 then it's very similar to just creating a filter like we
    did here。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框调用Lo并给我所有符合该过滤器的结果。如果我运行这个单元，那么我们可以在国家列中看到所有这些结果都是来自美国的响应者。所以如果我们只是想获取单个国家的信息，那么这与我们在这里创建一个过滤器非常相似。
- en: But instead of just grabbing the results for one country。 group by instead splits
    all of these responses up by country name。 So now that we have all of those split
    up and grouped by country name。 now we can apply a function and bring those results
    back together。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 但不是仅仅获取一个国家的结果。按组分组会将所有这些响应按国家名称拆分。所以现在我们已经将所有这些按国家名称拆分和分组。现在我们可以应用一个函数，并将这些结果合并在一起。
- en: So what kind of function would we like to apply。 Well， like I mentioned before。
    maybe we want to see the most popular social media sites broken down by country。
    Now。 if you just wanted to get the most popular social media sites by the。United
    States or by India。 then we've already seen how we can do this。 So right here
    I have some filtered results down to where we have the responses for the United
    States。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们想应用什么样的函数呢？正如我之前提到的，也许我们想看看按国家划分的最受欢迎的社交媒体网站。现在，如果你只是想获取美国或印度最受欢迎的社交媒体网站，那么我们已经看到过如何做到这一点。所以在这里我有一些过滤后的结果，涉及到美国的响应。
- en: so we can just do what we did before where we ran the value counts method on
    the social media column。 So I could just say here at the end。 I could access that
    social media column of that filtered data frame。 And then I could just run value
    counts。Here。So if I run this。 then we can see that for the United States， we have
    Reddit and Twitter and Facebook and YouTube as the top four social media sites。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此我们可以做我们之前做的事情，即在社交媒体列上运行值计数方法。所以我可以在这里说，在最后。我可以访问那个过滤后的数据框的社交媒体列。然后我可以运行值计数。在这里。所以如果我运行这个，那么我们可以看到对于美国，Reddit、Twitter、Facebook和YouTube是四大社交媒体网站。
- en: And if we wanted to look at these specifically for India then I could instead
    change that filter for India and run this and we can see that Whatsapp came first
    and then YouTube then LinkedIn and then Facebook。 So these are the results for
    one specific country。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想具体查看印度的情况，那么我可以将过滤器更改为印度，然后运行这个，我们可以看到Whatsapp排在第一，接着是YouTube，LinkedIn和Facebook。所以这是针对一个特定国家的结果。
- en: but if we were to run this on our data frame group by object then it will give
    us the results for all of those country groups。 So if it helps you with how you
    think about this， you can imagine that it's similar to running a filter and then
    applying a function like we did here with a single country。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果我们在数据框上按对象进行分组，那么它会给我们所有这些国家组的结果。所以如果这有助于你理解，可以想象这类似于运行一个过滤器，然后应用一个函数，就像我们在这里对一个国家所做的那样。
- en: but when we group these using the group by function and then apply a function
    then it will combine those groups to give us the results for all of those unique
    countries。 So I think this will make sense once we just see this here。 So remember
    I called our group up here。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当我们使用分组功能将这些数据分组，然后应用一个函数时，它会将这些组合并，以便给我们所有独特国家的结果。所以我认为一旦我们在这里看到这一点就会明白。所以记得我在这里调用了我们的组。
- en: country group， so if we come down here to the bottom， then we can say， okay，
    for the country group。 now I want to look at the social media column and I want
    to grab the value counts。For that column for that entire country group。 So if
    I run this。 then what this returns is a series with the most popular social media
    sites broken down by country。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 国家组，所以如果我们到这里底部，我们可以说，好吧，对于国家组。现在我想查看社交媒体列，并获取该列在整个国家组的值计数。所以如果我运行这个，那么返回的是一个系列，按国家划分的最受欢迎社交媒体网站。
- en: Now， this actually cuts off a little early here。 So let me grab a larger chunk
    of this series to get a better idea of what this looks like。 So right here at
    the end， I'm just gonna say dothead and look at the top 50 results or so。 So if
    we run this， then we can see here that our first country is Afghanistan。 and we
    can look at the most popular social media for that。 And then go down the list。
    Albania。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这实际上在这里提前截断了一点。所以让我获取这个系列更大的一部分，以便更好地了解它的样子。所以在这里的结尾，我就说.dothead，看看前50个结果左右。所以如果我们运行这个，那么我们可以看到，第一个国家是阿富汗。我们可以查看那里的最受欢迎社交媒体，然后继续往下列表，阿尔巴尼亚。
- en: Algeria， Argentina and so on。 Now this is actually returning a series and this
    series has multiple indexes。 It has this country index and this social media index。
    Now we haven't discussed multiple indexes in this series yet。 But if anyone is
    curious about how this works， then maybe just leave a comment in the description
    section below。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 阿尔及利亚、阿根廷等等。现在这实际上是返回一个系列，而这个系列有多个索引。它有国家索引和社交媒体索引。现在我们还没有讨论这个系列中的多个索引。但是如果有人对这如何运作感到好奇，或许可以在下面的描述部分留言。
- en: And maybe we can cover that topic in a future video。 But the country is the
    first index。And we can grab these just like we would with any other series。 So，
    again。 if I wanted to grab those most popular social media sites for India， for
    example。 then I could just come up here。 And with that returned series。 actually。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我们可以在未来的视频中讨论这个话题。但国家是第一个索引。我们可以像处理任何其他系列一样获取这些数据。所以，如果我想获取印度最受欢迎的社交媒体网站，那么我可以直接来到这里，使用那个返回的系列。
- en: let's take a look at this again。 So here's the index here。 I can grab that series
    just by saying dot Lo。And then looking for India。 And we can see that those are
    the same results that we got before。 Now， you might be wondering。 well， hey， if
    those are the same results that I got before， then why is this even useful。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再看一下。这是这里的索引。我可以通过说点点Lo来获取这个系列，然后查找印度。我们可以看到这些结果和之前得到的是一样的。现在，你可能会想，嗯，如果这些结果和我之前得到的是一样的，那这还有什么用呢。
- en: And it's useful because now we can see this result with any country without
    running a filter on each individual country in the world。 So， for example， if
    I wanted to see the most popular social media sites for the United States。 then
    now， instead of you know changing a filter over and over， I could just。 you know
    go here and look at the United States index for this return series。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这很有用，因为现在我们可以查看任何国家的结果，而不需要对世界上每个国家单独运行过滤器。所以，例如，如果我想查看美国最受欢迎的社交媒体网站，那么现在，除了不断更改过滤器，我可以直接查看这个返回系列的美国索引。
- en: And now we can see those results。 So I think it's really interesting being able
    to play around with your data like this and being able to explore。 I really like
    seeing the different results for different countries。 And a lot of these sites
    I've never heard of。 So for example。 if we look at the most popular social media
    sites in China or in Russia。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到这些结果。所以我觉得能够像这样玩弄数据并进行探索真的很有趣。我非常喜欢看到不同国家的不同结果，而这些网站中有很多我从未听说过。所以例如，如果我们查看中国或俄罗斯最受欢迎的社交媒体网站。
- en: then let me look at China here。We can see that yeah it does look like that was
    a Chinese social media site。 this waychat or Wechat， and then we have I'm assuming
    this is pronounced Webo maybe but yeah I think that's very interesting if we want
    to look at Russia then we can't actually say just Russia in this survey Russia
    was called the Russian Federation I've made that mistake before where I just type
    in Russia and it'll tell you that it cannot find an index with that name so this
    is actually Russian Federation and if we search for that then we can see I don't
    know how to pronounce this but the one that I thought was Russian writing before
    it does look like that was in fact Russian and just remember if it makes more
    sense for you to look at percentages instead of just raw numbers here then you
    can always set normalizedize equal to true and it will give you percentage results
    instead of the raw number。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 那让我在这里看看中国。我们可以看到，这确实看起来像是一个中国社交媒体网站，可能是微信，然后我猜这个发音是微博，但我觉得这非常有趣。如果我们想看看俄罗斯，那么在这个调查中我们不能仅仅说俄罗斯，俄罗斯被称为俄罗斯联邦。我之前犯过这样的错误，只输入俄罗斯，它会告诉你找不到这个名称的索引，所以实际上是俄罗斯联邦。如果我们搜索这个，那么我们可以看到我不知道该怎么发音，但我之前认为是俄文的那个，确实看起来是俄文。请记住，如果你觉得查看百分比比单纯的原始数字更有意义，你总是可以将normalizedize设置为true，这样它会给你百分比结果，而不是原始数字。
- en: So we can see that this Russian social media site here has 30% or 30% of the
    people from Russia said that that was their most popular social network。 And if
    we go back to China then we can see that this one here at the top。 that has 67%
    of the developers from China said that that was the social media site that they
    used the most。 So I just thought that was really interesting being able to play
    around with these numbers and seeing the different results for different countries。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到这个俄罗斯社交媒体网站有30%的人表示这是他们最受欢迎的社交网络。如果我们回到中国，我们可以看到顶部的这个，有67%的开发者表示这是他们使用最多的社交媒体网站。所以我觉得能玩弄这些数字，看到不同国家的不同结果真的很有趣。
- en: And this is the kind of thing that we can do once we've got these skills down
    within pandas。 And a lot of the times it's just fun being able to explore your
    data like this。 and finding things within your data that you might not have expected。
    Now bringing this back to what we were discussing at the beginning of the video
    we can also use this to run more traditional aggregate functions like mean median
    and things like that。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦掌握了这些技能，我们就可以做这样的事情。在很多时候，能够以这种方式探索数据本身就是一种乐趣，并发现数据中可能未曾预料到的东西。现在回到视频开始时讨论的内容，我们也可以用它来运行更传统的汇总函数，如均值、中位数等。
- en: So before we looked at the median salaries for the entire survey。 But now let's
    break these down。😊。Co instead。 So just like we looked at the value counts of the
    social media column we can look at the median of the salary column and that salary
    column is labeled converted comp。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 所以前面我们查看了整个调查的中位数工资。但现在让我们将其拆分。😊因此，就像我们查看社交媒体列的值计数一样，我们可以查看工资列的中位数，该工资列标记为转换的补偿。
- en: So to do this， I can just grab our country group here。 and we want to look at
    this converted comp column and now we need to tell it what aggregate function
    we want to see for all these countries。 and I want to see the median salaryaries
    for all these countries。 So if I run this then we can see that our result here
    is that it says okay。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 所以要做到这一点，我可以直接抓取我们国家组的数据。我们想查看这个转换的补偿列，现在我们需要告诉它我们想看到什么汇总函数。我想查看所有国家的中位数工资。如果我运行这个，我们可以看到结果显示正常。
- en: here is the median salary in Afghanistan here it is for Albania and so on。 So
    now if you wanted to。 for example， see the median salary in a place like Germany。
    then we can just simply come up here。 and this is the result that we get here。
    and these are our indexes。 So the index。 the indexes are country name。 So if I
    want to grab a specific country then I can just use dot Lo and type in the country。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是阿富汗的中位数工资，这是阿尔巴尼亚的，依此类推。所以如果你想看到像德国这样的地方的中位数工资，我们可以简单地查看这里。这就是我们得到的结果，这些是我们的索引。索引是国家名称。如果我想获取特定国家的数据，我可以使用点符号，输入国家名称。
- en: So if I run this， then we can see that the median salary here in Germany is
    about 63000。 Now。 maybe you're working on some analysis where you want to group
    your data。 but you also want to run multiple aggregate functions on your group。
    So let's say that we just didn't want to see the median。 But we also wanted to
    see the mean as well。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我运行这个，我们可以看到德国的中位数工资大约为63000。现在，或许你正在进行一些分析，想要对数据进行分组，同时想在你的组上运行多个汇总函数。假设我们不仅想看到中位数，还想看到均值。
- en: So to do this， we can use the ag method A G G and pass in all of the aggregate
    functions that we want to use。 So to do this here， I could just say， let me grab
    where we ran our median here。 instead of running just the median aggregate function。
    We're going to use this ag method here。 A G G。 and now we're going to pass in
    a list of the aggregate functions。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 所以要做到这一点，我们可以使用 ag 方法 A G G，并传入我们想要使用的所有汇总函数。为了做到这一点，我可以说，让我抓取我们运行中位数的地方。我们将使用这个
    ag 方法，而不是仅仅运行中位数汇总函数。现在我们将传入一个汇总函数的列表。
- en: So let's say that I want to get the median first。 And then I also want to be
    able to see the mean。 So if we run this。 Then we can see that we get a data frame
    with the mean and the median salaries for every country。 And again， just like
    we did before。OrIf I wanted to narrow this down by a specific country。 then we
    could easily do that just by grabbing one of these indexes here by country name。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我想先获取中位数，然后我也想能够看到平均数。如果我们运行这个。然后我们可以看到得到一个包含每个国家的平均和中位数工资的数据框。再次，如我们之前所做的那样。如果我想按特定国家缩小范围，那么我们只需通过国家名称获取这些索引之一即可。
- en: So if we wanted to look at the mean and median salaries for Canada。 then I could
    just come up here and say dot Lo and then pass in。Canada here。 Let me spell that
    correctly。 And now we can see the median salary and the mean salary for Canada。
    Now， depending on what you're trying to do， you might run into some issues that
    you didn't quite expect。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想查看加拿大的平均和中位数工资。那么我可以直接在这里输入dot Lo，然后传入加拿大。让我拼写正确。现在我们可以看到加拿大的中位数工资和平均工资。根据你的需求，你可能会遇到一些意想不到的问题。
- en: So， for example， let's say that you're trying to figure out how many people
    in each country know how to use Python。 So before we do this to our group， let's
    first look at how we do this with a single country using the filtering approach
    that we used earlier。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，假设你想知道每个国家有多少人会使用Python。在我们对组进行此操作之前，先看看我们如何使用之前使用的过滤方法来处理一个国家。
- en: So I'm going to scroll up to where we had that filter。 And I'm going to copy
    that and paste that in down here。 And then I'm just going to get rid of this value
    counts section here。 So currently。 the filter that we have here is we are filtering
    the countries down to people who said that they were from India。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我要滚动到我们有那个过滤器的地方。然后我将复制并粘贴到这里。然后我将删除这个值计数部分。因此，目前我们这里的过滤器是我们将国家过滤到自称来自印度的人。
- en: So now， in order to figure out how many people said that they knew Python within
    this survey。 we're going to use these string methods that we've seen in previous
    videos。 And if you don't remember what these look like。 then we could do this。By
    doing something like this。 we could say， okay， I want all of the responses for
    the people who said that they were from India。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了弄清楚在这项调查中有多少人表示知道Python。我们将使用之前视频中见过的字符串方法。如果你不记得这些是什么样的。那么我们可以这样做。通过做这样的事情，我们可以说，好吧，我想要所有表示来自印度的人的回应。
- en: and now when I get that result， remember that this result here is just going
    to be a filtered version of our data frame。 our original data frame and now we
    can say okay， I also want。The language worked with is where they put difference
    the different languages that they actually use。 So if we look at this language
    worked with column here。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我得到这个结果时，请记住，这个结果只是我们数据框的一个过滤版本。我们的原始数据框，现在我们可以说，好吧，我还想要。使用的语言是他们实际使用的不同语言。因此，如果我们查看这个语言工作列。
- en: then we can see that they list all of the languages that they said that they
    know and to see if Python is within this column here then I can say dot STR and
    use the string class on that return series and say。 okay， we want where the STr
    dot contains Python。 So this will return true for the rows that have Python and
    the languages worked with and false for the responses that don't So if I run this。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以看到他们列出所有自称会的语言，以检查Python是否在这一列中，然后我可以说dot STR并在返回的系列上使用字符串类，表示。好吧，我们想要STR.dot包含Python的地方。因此，这将为包含Python的行返回true，而对不包含的回应返回false。所以如果我运行这个。
- en: then this just returns a series of true and false values where it tells us whether
    the language worked with column for each respondent contained that string of Python。
    Now， if we want to actually count the number of people who know Python。 then we
    can use the sum function to add all of these up。 Now normally you。think that some
    would only work with numerical data， but some will also work on bulloleanions。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，这将返回一系列真假值，告诉我们每个受访者在语言工作列中是否包含那串Python字符串。现在，如果我们想实际计算知道Python的人数。那么我们可以使用sum函数将这些值相加。通常，你会认为sum只适用于数值数据，但它也适用于布尔值。
- en: It will count all of the trues as one and all the falses as 0。 So to find out
    how many people know Python Then I could simply just do a dot sum here at the
    end。 And if I run this， then we can see that around 3100 people from India who
    answered the survey said that they knew Python as one of the languages that they
    work with。 Now， before when we wanted to run a similar aggregation function on
    our data frame group by object。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 它将把所有的真值计为 1，把所有的假值计为 0。所以要找出多少人知道 Python，我只需在最后做一个 dot sum。如果我运行这个，那么我们可以看到大约
    3100 名来自印度的调查者表示，他们知道 Python 是他们使用的语言之一。现在，在我们想要对数据框组对象运行类似的聚合函数之前。
- en: we simply took the same approach on our group by object。 So， for example。 you
    might think that we could just do something like this to see all of these to see
    how many people。 new Python from each country， you might think that we could say，
    okay， Well。 I should just be able to do this。 I could just say， okay， for this
    country group。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对组对象采取了相同的方法。所以例如，你可能会认为我们可以这样做，看看有多少人来自每个国家知道 Python。你可能会认为我们可以说，好吧，我应该能做到这一点。我可以说，对于这个国家组。
- en: I want to look at this language worked with。Column and then see the strings
    that contain Python and sum those up。 But if I run this here。 then we can see
    that we get an error。 Now， like I said in a previous video。 Sometimes it can be
    hard to read these panddas errors and understand exactly what we did wrong。 But
    in this case， it actually gives us a pretty good clue as to what we did wrong。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我想查看这个语言工作的列，然后查看包含 Python 的字符串并将其相加。但是如果我在这里运行这个，我们可以看到出现了一个错误。正如我在之前的视频中所说，有时阅读这些
    Pandas 错误并理解我们做错了什么可能很困难。但在这种情况下，它实际上给了我们一个相当不错的线索，说明我们做错了什么。
- en: It tells us that we cannot access the attribute string of a series group by
    object。 And then it says， try using the apply method instead。 So the reason that
    we get this error here。 is because this is no longer just a series。 Instead， this
    is a series group by object。 and it tells us to instead use the apply method。
    So when we run an apply method on a group object like this。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 它告诉我们，无法访问系列组对象的字符串属性。然后它说，尝试使用 apply 方法。因此，我们在这里得到这个错误的原因是，因为这不再只是一个系列，而是一个系列组对象。它告诉我们改用
    apply 方法。所以当我们对像这样的组对象运行 apply 方法时。
- en: we're going to specify a function that we want to be run on every series in
    this group。 And I know that can sound a little bit confusing， So let's actually
    see what this looks like。 and hopefully it'll clear this up a bit。So。Instead of
    accessing this string class directly here。 I'm instead going to use the apply
    method。 And for anybody following along or who will download this。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将指定一个函数，在这个组中的每个系列上运行。我知道这可能听起来有点困惑，所以让我们看看这是什么样子。希望这能稍微清晰一些。所以，不是直接访问这里的字符串类，而是使用
    apply 方法。对于任何跟随的或将要下载这个的人。
- en: I'm going to go ahead and leave this cell with this error here so that you can
    run that and reproduce that error。 And then I'm going to do the correct way in
    this cell。 So again。 instead of using the string class directly on this series
    group object。 I'm instead going to use the apply method。 So let me just cut that
    out。 And I'll say dot apply。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我将继续保留这个单元格中的错误，以便你可以运行它并重现该错误。然后我将在这个单元格中做正确的方式。所以再次强调，不是直接在这个系列组对象上使用字符串类，而是使用
    apply 方法。所以让我把它剪切掉，然后我会说点 apply。
- en: And now we can apply a function that we want to run on each series in this group。
    So if you've seen one of the previous videos。 Then you'll know that if we just
    want a nice quick。 easy function， then we can use a lambda function， you could
    write another separate function if you wanted to。 But here I'm going to use lambmbda。
    So lambmbda here is going to be。😊，A series。 So now we can say。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以应用一个我们想在这个组中的每个系列上运行的函数。如果你看过之前的视频，你会知道如果我们只想要一个简单快捷的函数，我们可以使用 lambda
    函数。如果你愿意，可以写另一个单独的函数。但在这里我将使用 lambda。所以这里的 lambda 是。😊，一个系列。所以现在我们可以说。
- en: okay， well， what do we want to return？ Al right， Well， I want to return X and
    then。Since this is a series， we can say x dot string dot contains Python dot sum。
    So again。 just one more time， we are running the apply method on this series group。
    and then we are passing in a function that is going to run on each one of these
    series。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我们想要返回什么？好的，我想返回 X，然后。由于这是一个系列，我们可以说 x.dot.string.dot.contains Python.dot.sum。所以再次强调，就再来一次，我们正在对这个系列组运行
    apply 方法，然后传递一个将在这些系列上运行的函数。
- en: and the function that we want or what we want returned from that function is
    the sum of any of the values in that series that contain the string Python。 and
    it's going to do that for every country since we're using this country group。
    So if I run this。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的函数或返回的内容是该系列中包含字符串Python的值的总和，这将在我们使用这个国家分组时为每个国家执行此操作。所以如果我运行这个。
- en: Then we can see here that we see， okay， in Afghanistan。8 of the respondents
    said that they know Python。 Albania was 23 and so on。 Now。 seeing these numbers
    by itself isn't really that big of a help if we're trying to get an understanding
    of the percentage of people in each country who said that they know Python because
    with these results here。 we only see a single number。 we'd have to go back and
    forth and compare， okay。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们可以看到，在阿富汗，8名受访者表示他们会使用Python，阿尔巴尼亚则有23名，等等。现在，仅仅看到这些数字并没有太大的帮助，因为我们想了解每个国家声称会使用Python的人的百分比，单靠这些结果，我们只能看到一个数字，我们需要来回比较。
- en: how many people answer the survey from each country and how many of them use
    Python。 And then we can do a calculation from there to figure out the percentage
    of people from that country who knew Python。 But we don't want to do that。 That
    is too much to do manually。 So we want to figure our way so that we can get Python
    and pandas to do this calculation for us。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 每个国家的调查有多少人回答，以及其中有多少人会使用Python。然后我们可以从那里计算出这个国家中会使用Python的人的百分比。但我们不想手动计算，这样太繁琐了。所以我们想找到一种方法，让Python和pandas为我们完成这个计算。
- en: Now， a lot of people have asked me to put together coding problems to practice
    what we learn in these videos So you can think of this as practice。 So I'll do
    this here。 So can any of you think of a way where we can。Figure out what percentage
    of people in each country know how to use Python。 If you think that you can figure
    that out， then you can pause the video here and try to work through this yourself。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，很多人都让我整理一些编程问题，以便练习我们在这些视频中学到的内容。所以你可以把这个当作练习。所以我将在这里进行尝试。那么，你们中有没有人想过一个方法，我们可以算出每个国家中会使用Python的人所占的百分比？如果你认为你能找出这个问题，可以在这里暂停视频，自己试着解决。
- en: and it's going to combine a few topics that we've discussed in the series so
    far in order to do this。 But with that said， I'm going to go ahead and move along
    with my solution So again。 if you want to try to figure that that out on your
    own。 then you can pause the video and try to work that out。 And if you did do
    that。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 而且这将结合我们在这一系列课程中讨论的一些主题来完成这个任务。话虽如此，我将继续我的解决方案。所以如果你想自己试着找出这个问题，可以暂停视频，试着自己解决。如果你这样做了。
- en: then I hope that you were able to get something figured out there。 But if not。
    then no worries let's go ahead and walk through my solution here so that you can
    use this as practice to get better with pandas so that you can do this type of
    analysis in the future。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我希望你能够在这里找到一些解决方案。但如果没有，那也没关系，让我们继续来看看我的解决方案，这样你可以用它作为练习，提升自己在pandas方面的技能，以便将来能够进行这种类型的分析。
- en: So like I said， in order to get the percentage of developers who know Python
    for each country。 we're going to use a combination of a few different things that
    we've learned throughout this series so far。 Now there are probably several different
    ways of answering this question。 And if you have a different way that you answered
    this question。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我所说，为了计算每个国家会使用Python的开发者百分比，我们将结合我们在这一系列课程中学到的一些不同的知识。现在，回答这个问题可能有几种不同的方法。如果你有不同的解答方法，欢迎分享。
- en: Than me then definitely leave it in the description section below so that people
    can see different approaches to this。 You know， it's absolutely possible that
    there's a more efficient way than how I'm about to do it here。 So if there is，
    then I'll highlight that so others can see what the best approach is。 But here's
    how I'm going to do this。 So first， I'm going grab the total number of respondents
    from each country。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你找到了方法，请在下面的描述区留言，让大家可以看到不同的方法。你知道，绝对有可能有比我接下来要做的更有效的方式。如果有的话，我会强调一下，这样其他人也能看到最佳方法。但是我打算这样做。首先，我将获取每个国家的总受访者人数。
- en: That way we know the total number of people from each country who responded
    to this survey。 So I will just call this country respondents， and I will set this
    equal to。We。Want to grab the value counts。Of the countries here， so。If I print
    out what we get here。 we've seen this before。 whoops， and I got an error there
    because I put county。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这样我们就知道每个国家回应这项调查的人数总和。所以我将称之为国家回应者，并将其设置为。我们想要获取这里国家的值计数。所以。如果我打印出我们得到的结果。我们之前见过这个。哎呀，我在这里出错了，因为我写成了县。
- en: I'm into book country。 So if I look at this。 then these are the total number
    of respondents who said that they were from each country。 And again， we saw this
    earlier in the video。 So now I'm going to grab the total number of people from
    each country who know Python。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我把它改回国家。所以如果我看看这个。那么这些是说他们来自每个国家的总回应者人数。我们在视频中也看到过这个。所以现在我将获取每个国家知道 Python 的总人数。
- en: And we just did this a second ago right here。 But I'll go ahead and do this
    again and set it as a variable so that we have all of these steps。 So I'm going
    to grab。All of that that we just calculated。 And now I'm going to set this as
    a variable。 And I'm going to call this， you know。 country uses Python。 and then
    I'll set it equal to that。 And now。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚才就在这里做过这个。但我会继续这样做，并将其设置为变量，以便我们记录所有这些步骤。所以我将抓取。我们刚刚计算出的所有内容。现在我将把这个设置为一个变量。我将称之为，你知道的。国家使用
    Python。然后我将把它设为等于这个。现在。
- en: Let's print out that variable as well。 So let me go to the next line here， my
    computers。Kind of give them me some grief。 Okay， so these are all the people from
    each country who said that they know how to use Python。 So now we have one variable
    that is a series that has the total number of people from each country right here
    called country respondents。 And then we have another variable that is a series。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们也打印出那个变量。所以让我在下一行进行，这让我电脑。有点让我烦恼。好的，这些是来自每个国家的所有人，他们说他们知道如何使用 Python。所以现在我们有一个变量是一个系列，包含来自每个国家的总人数，称为国家回应者。然后我们还有另一个变量是一个系列。
- en: That is the total number of people from each country who know Python。 So now
    we need to combine these two。 Now， I'm actually going to use a method here that
    we haven't discussed in this series yet。 So if you got stuck here， then that's
    completely understandable。 I probably should have mention this in the video where
    we appended rows to a data frame。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是来自每个国家的知道 Python 的总人数。所以现在我们需要将这两个结合起来。现在，我实际上将使用一个在这个系列中还未讨论过的方法。所以如果你在这里卡住了，那是完全可以理解的。我可能应该在我们将行附加到数据框的那段视频中提到这个。
- en: but we can combine more than one series together using the pandas concat function。
    So let's see what this would look like。 So I can say， and I'll just call this
    data frame Python Df。 And now I'm going create a data frame where we can cat those
    two series in the one。 So I can say P D dot concat。And now I'm going to pass in
    a list of the series that we want to concatenate。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我们可以使用 pandas 的 concat 函数将多个系列组合在一起。所以让我们看看这会是什么样子。我可以说，我就叫这个数据框 Python Df。现在我要创建一个数据框，我们可以将这两个系列连接在一起。所以我可以说
    P D.dot concat。现在我要传入一个我们想要拼接的系列列表。
- en: So I want this to be our country respondents。 And I also want to。Add in this
    country uses Python series， and now。We also want to set axis equal to columns
    because by default。 it's going to try to concatenate these on row， but we want
    to match up the indexes here so that it concates it that way instead。 So we want
    to say axis is equal to columns and then finally。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我希望这些是我们国家的回应者。而且我还想。加入这个国家使用 Python 的系列，现在。我们还想将轴设置为列，因为默认情况下。它会尝试在行上进行拼接，但我们希望将索引匹配，这样才能以那种方式进行拼接。所以我们想说轴等于列，然后最后。
- en: I'm also going to put sort is equal to false。 Now， if you watch a previous video。
    this isn't absolutely necessary， but if you run it without sort equal to false。
    then it'll give you a warning saying that in a future version of pandas。 that
    it'll sort by default or sort by false on default。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我还将设置 sort 等于 false。现在，如果你观看了之前的视频。这不是绝对必要的，但如果你在没有设置 sort 等于 false 的情况下运行它。它会给你一个警告，告诉你在未来版本的
    pandas 中。它会默认排序或默认不排序。
- en: So it's better just to go ahead and specify if you want the resulting data frame
    sorted or not。 So now let's look at this concatenated data frame here。 Okay， so
    now we have a data frame here。 where these two series have been concatenated and
    match up on the same index。 So this is a lot more useful because。Now we can see，
    okay there were about 20，000 or 21。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 所以最好直接指定你是否希望结果数据框排序。现在让我们看看这个连接的数据框。好的，现在我们有一个数据框，其中这两个系列已被连接，并在相同的索引上匹配。这更有用，因为现在我们可以看到，大约有20000或21000。
- en: 000 people who said that they were from the United States and about 10000 people
    who said that they know Python so that's definitely a lot better and more useful
    information Now one thing about this new data frame that we have is some columns
    that don't really relate to what we're talking about anymore we can see here that
    this one is just called country and this one is called languages worked with so
    let's rename these so that they make more sense in the context of what we're actually
    trying to do and we saw how to rename columns in a previous video as well。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 1000名声称来自美国的人和大约10000名声称知道Python的人，所以这肯定是更好和更有用的信息。现在关于这个新数据框的一件事是，有些列与我们正在讨论的内容并没有真正的关系。我们可以看到这个叫做国家，而这个叫做使用的语言，所以让我们重命名这些，使它们在我们实际尝试做的上下文中更有意义，我们也看到如何在之前的视频中重命名列。
- en: but if you forgot， then you can do this just by grabbing our data frame here
    and I'll say Python Df。 which is our data frame dot rename and now what do we
    want to rename we want to rename the columns and now I'm going to pass in a dictionary
    here where。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果你忘记了，那么你可以通过抓取我们的数据框来做到这一点，我会说Python Df，也就是我们的数据框.dot rename，现在我们想要重命名什么呢？我们想要重命名列，我将传入一个字典。
- en: The key is the previous value， and the value is going to be the updated value。
    So I will call this a number of respondents。And then I also want to change this
    languages worked with column here。 And I want to change this to be。Let's call
    this nu nose Python。 And if I run this。 then we can see that this looks good。
    We have number of respondents from the United States and number nose Python from
    the United States。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 关键在于之前的值，而这个值将是更新后的值。所以我将其称为回应者数量。然后我还想更改这个“使用的语言”列。我想把它改成，我们称之为知道Python的人数。如果我运行这个，我们可以看到这看起来不错。我们有来自美国的回应者数量和知道Python的数量。
- en: So that looks good to me。 So since it looks good， I'm going to say in place
    is equal to true。 so that it actually modifies our data frame。 So if I run that
    and then look at our data frame one more time。 then。😊，We can see that it has been
    updated with those new columns。 Now we have the total number of respondents from
    each country and the number of people who know Python from each country in one
    data frame。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这看起来不错。由于它看起来不错，我将说in place等于true，这样它实际会修改我们的数据框。如果我运行这个，然后再查看我们的数据框，那么😊，我们可以看到它已用这些新列更新。现在我们有来自每个国家的回应者总数，以及每个国家知道Python的人数，所有这些都在一个数据框中。
- en: So we have all the information that we need to calculate a percentage。 Now all
    we need to do is create a new column and calculate this。 So if you remember in
    order to create a new column， we can simply just assign it。 So I will call this
    column PCt for percentage， knows Python。
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们有计算百分比所需的所有信息。现在我们所需的就是创建一个新列并进行计算。所以如果你还记得，为了创建一个新列，我们可以简单地赋值。所以我将这个列称为PCt，用于表示知道Python的百分比。
- en: And now what do we want this to be equal to。 Well。 if you don't know how to
    calculate a percentage mathematically。 basically what you do is you take the part
    and then divide that by the whole。 and then you multiply that by 100。 So our part
    here is the number of people who know Python。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要这个等于什么呢？好吧，如果你不知道如何用数学计算百分比，基本上你需要先取出部分，然后用它除以整体，再乘以100。所以这里的部分是知道Python的人数。
- en: So I will grab that and say。on underscore DF and access that series， access
    that column。 and then I want to divide that by the whole and the whole are the
    total number of people from that country。 so that is nu respondents。And now， if
    we want this to be a whole number percentage。 then we can multiply this by 100。
    Okay， so if I did all of this correctly。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我会抓取这个，叫做on underscore DF，并访问那个系列，访问那个列。然后我想用这个部分除以整体，而整体是来自那个国家的总人数，也就是回应者数量。现在，如果我们想要这个是一个整数百分比，那么我们可以乘以100。好的，如果我做了所有这些正确的话。
- en: and it's very possible I made a mistake。 But if I did all this correctly。 then
    we should have a data frame here with the percentage of people who know Python
    from each country。 And now we can work with this just like any other data frame。
    So let's say that we wanted to sort these results。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 而且很有可能我犯了一个错误。但如果我正确地完成了所有这些，那么我们应该在这里有一个数据框，显示每个国家知道 Python 的人所占的百分比。现在我们可以像处理任何其他数据框一样处理这个数据框。所以假设我们想要对这些结果进行排序。
- en: Now we learned this in a previous video on how to sort values in a series。 So
    let's say that we want to sort the countries by the largest percentage of respondents
    who know Python。 So to do this， I can just say Python D F。t sort。Underscore values。
    And if you forget how to do any of this， then you can always go back to our pandas
    video where we learn about sorting。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在之前的视频中学习了如何对系列中的值进行排序。所以假设我们想按照知道 Python 的受访者所占的最大百分比来排序各个国家。为此，我可以简单地说
    `Python D F.t sort.Underscore values`。如果你忘记了如何做这些事情，那么你可以随时回到我们的 pandas 视频，那里我们学习了排序。
- en: So in order to sort by the people who know Python or the percentage， we can
    say， okay， sort by。 what did I call this here。 Percent knows Python。 And then
    I actually want this to be in ascending。Order equal to false， because I want the
    largest percentage of people who know Python at the top。And I was about to put
    in place equals true first。 But let's see what this looks like。 Okay。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 所以为了按照知道 Python 的人或其百分比进行排序，我们可以说，好吧，按什么排序。我在这里称之为“知道 Python 的百分比”。然后我实际上希望这以升序排列。`Order`
    等于 `false`，因为我希望知道 Python 的人所占的最大百分比排在最上面。然后我本来打算先将 `in place` 设置为 `true`。但让我们看看这是什么样子。好的。
- en: so it looks like that that sort worked， and it looks good。 So now I'll say in
    place is equal to true so that it modifies our data frame。 And now we can look
    at our results here。 So we can see here that some of these are a little misleading
    here because you know。100% of people from Sal May and Princippe， No Python。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 所以看起来那个排序有效，并且效果不错。所以现在我会说 `in place` 等于 `true`，这样它就会修改我们的数据框。现在我们可以在这里查看我们的结果。因此我们可以看到这里的一些数据有点误导，因为你知道。来自圣多美和普林西比的
    100% 的人不懂 Python。
- en: But we only had one person from the country who answered the survey。 And he
    happens to know Python or she。 So that is 100%。 So instead， let's look at the
    head here。 and grab。See if we can find a country here with a larger number of
    respondents。 So， okay。 we have 72 people from Uganda and 47 of them new Python。
    So that's 65%。 that's pretty good。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们只有一个来自这个国家的人回答了调查。而他恰好知道 Python，或者她。因此这是 100%。所以相反，让我们看看头部，并抓取。看看我们能否找到一个受访者数量更多的国家。所以，好吧。我们有
    72 名来自乌干达的人，其中 47 名知道 Python。所以这是 65%。这相当不错。
- en: we have oh， okay， so this is United States， that's not bad either。 We have about
    21000 here。 about 10000 new Python。 So that's 48%。 So that's in the higher range。
    that's pretty good。 So， yeah。 I think this is a great way to practice working
    with pandas。 And also。 it's just fun being able to explore your information in
    this way。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有哦，好的，这是美国，情况也不错。这里大约有 21000 人，大约有 10000 新的 Python 使用者。所以这是 48%。所以这在较高的范围内，这很好。所以，是的。我认为这是练习使用
    pandas 的好方法。而且，能够以这种方式探索你的信息也很有趣。
- en: And now that we have a data frame with all this information。 Then we can also
    inspect a specific country to see what the percentage of developers are from a
    specific country who know Python。 So， for example， instead of looking through，
    what if I wanted to see Japan。 instead of looking through all of these。 I could
    just say， okay， Python。😊，D F dot Lo。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个包含所有这些信息的数据框。然后我们还可以检查特定国家，以查看来自特定国家的开发者中知道 Python 的百分比。所以，举个例子，我想查看日本，而不是逐一查看所有这些。我可以简单地说，好吧，`Python.😊，D
    F dot Lo`。
- en: And since our country names are our indexes here。 then we can just do a dot
    Lo of Japan。 and then we can see that we get these statistics for that specific
    country。 Okay。 so I know that that may have been a lot to take in and that we
    covered a lot of ground in this video。 We definitely covered some more advanced
    topics here than we did in previous videos。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的国家名称是这里的索引，所以我们可以简单地对日本使用 `dot Lo`，然后我们可以看到我们得到了该特定国家的统计数据。好的。所以我知道这可能有很多内容需要消化，并且我们在这个视频中覆盖了很多内容。我们确实涵盖了一些比之前视频更高级的主题。
- en: but I hope this kind of got you a little excited to learn what you can do with
    pandas。 and the types of problems that we can solve。 You know。 when you are exploring
    through your data like this。 you're probably going to make a ton of mistakes along
    the way， you know。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，我希望这能让你对使用pandas所能做的事情感到兴奋，以及我们可以解决的问题类型。你知道，当你像这样探索数据时，你可能会在过程中犯很多错误。
- en: I still make mistakes in pandas all the time， even in these videos， I've made
    some mistakes。 and I have these scripted out。 So it definitely happens。 But you
    know。 each problem that we work through similar to this。 just makes it easier
    and easier each time to work through additional problems。
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我在使用pandas时仍然会犯错误，甚至在这些视频中，我也犯了一些错误。而且这些都是我事先准备好的。所以这确实会发生。但是你知道，每一个我们解决的问题类似于这个，都让后续处理其他问题变得越来越容易。
- en: So if you need to go back and rewatch some of these steps in order to work through
    these problems like this on your own。 then that's。😊，Completely normal。 know， don't
    think that just because this may have seemed difficult that there's something
    wrong with you。
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你需要回去重看这些步骤，以便自己解决这些问题，那是完全正常的。😊，不要觉得如果这似乎很困难，那就是你有什么问题。
- en: It's definitely normal for this stuff to be a lot of information to take in
    And also。 like I said before， if you have some other ways of solving the problems
    that we answered here。 then like I said， definitely leave a comment with your
    solution in the description section below。 and I'll take a look at those。 and
    I'll highlight some if they are better than what I did here。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这类信息确实很多，理解起来很正常。而且，正如我之前所说，如果你有其他解决我们在这里回答的问题的方法，那么请在下面的描述部分留言分享你的解决方案，我会看一下这些方案，如果它们比我在这里的做法更好，我会特别提及。
- en: Okay so before we end here I would like to mention the sponsor of this video。
    And that is brilliant。 So in this series， we've been learning about pandas and
    how to analyze data and Python and brilliant would be an excellent way to supplement
    what you learn here with their handson courses they have some excellent courses
    and lessons that do a deep dive on how to think about and analyze data correctly。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，在我们结束之前，我想提一下本视频的赞助商。那就是**Brilliant**。在这个系列中，我们学习了关于pandas以及如何使用Python分析数据，**Brilliant**将是一个很好的补充，提供动手实践的课程，他们有一些优秀的课程和课程内容，深入探讨如何正确思考和分析数据。
- en: for data analysis fundamentals， I would really recommend checking out their
    statistics course。 which shows you how to analyze graphs and determine significance
    in the data。 and I would also recommend their machine learning course， which takes
    data analysis。
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据分析基础，我强烈推荐查看他们的统计课程，它教你如何分析图表并确定数据的显著性。我还推荐他们的机器学习课程，它涉及数据分析。
- en: '![](img/f68605379f547ff8d305f85d92ec3497_1.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f68605379f547ff8d305f85d92ec3497_1.png)'
- en: '![](img/f68605379f547ff8d305f85d92ec3497_2.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f68605379f547ff8d305f85d92ec3497_2.png)'
- en: '![](img/f68605379f547ff8d305f85d92ec3497_3.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f68605379f547ff8d305f85d92ec3497_3.png)'
- en: '![](img/f68605379f547ff8d305f85d92ec3497_4.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f68605379f547ff8d305f85d92ec3497_4.png)'
- en: '![](img/f68605379f547ff8d305f85d92ec3497_5.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f68605379f547ff8d305f85d92ec3497_5.png)'
- en: to a new level where you'll learn about the techniques being used that allow
    machines to make decisions where there's just too many variables for a human to
    consider。 So to support my channel and learn more about brilliant。 you can go
    to brilliantg cs to sign up for free and also the first 200 people that go to
    that link will get 20% off the annual premium subscription。 and you can find that
    link in the description section below again。
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 提升到一个新层次，你将学习到如何让机器在变量过多的情况下做出决策的技术。为了支持我的频道并了解更多关于**Brilliant**的信息，你可以去brilliantg
    cs注册免费账户，前200位访问该链接的人将获得年度高级订阅20%的折扣。你可以在下面的描述部分找到这个链接。
- en: that's brilliantg so I think that's going to do it for this pandas video I hope
    you feel like you got a good idea for how to use these aggregate functions and
    also how we can group our data so that we can explore our data in interesting
    ways。 I would really encourage you to take some time after this video and play
    around with the data a bit see if you can answer certain questions that someone
    might have about this data。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我认为这就是我们本次关于pandas视频的全部内容，希望你对如何使用这些聚合函数以及如何对数据进行分组以探索数据有了良好的理解。我真的鼓励你在观看完这个视频后花点时间玩玩数据，看看能否回答某些人可能对这些数据提出的问题。
- en: So for example， what is the most common education level for people who answered
    this survey that's definitely something that we could answer by what we learned
    here。😊，I hope you feel like you got a good introduction to being able to answer
    those types of questions。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于回答这项调查的人，最常见的教育水平是什么，这绝对是我们可以通过这里学到的知识来回答的问题。😊 我希望你感觉自己对回答这类问题有了很好的介绍。
- en: Now， in the next video， we're gonna be learning about how to handle missing
    data and how to clean up your data。 It's very common for data to have missing
    values。 So knowing how to sanitize and clean our data is definitely going to be
    important。 But if anyone has any questions about what we covered in this video。
    then feel free to ask in the comment section below， and I'll do my best to answer
    those。
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个视频中，我们将学习如何处理缺失数据以及如何清理数据。数据中缺失值是非常常见的，因此了解如何清理和整理我们的数据绝对很重要。如果有人对我们在这个视频中讨论的内容有任何问题，请随时在下面的评论区提问，我会尽力回答。
- en: And if you enjoy these tutorials and would like to support them。 Then there
    are several ways you can do that。 The easiest ways to simply like the video and
    give it a thumbs up。 And also， it's a huge help to share these videos with anyone
    who you think would find them useful。 And if you have the means you can contribute
    through Patreon。
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这些教程并想支持它们，有几种方法可以做到。最简单的方法就是点赞视频并给予好评。此外，与任何你认为会觉得有用的人分享这些视频也是一个很大的帮助。如果你有能力的话，可以通过Patreon进行支持。
- en: And there's a link to that page in the description section below。 be sure to
    subscribe to your future videos and thank you all for watching。😊。![](img/f68605379f547ff8d305f85d92ec3497_7.png)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的描述部分有一个链接指向该页面。请确保订阅你未来的视频，感谢大家的观看。😊！[](img/f68605379f547ff8d305f85d92ec3497_7.png)
